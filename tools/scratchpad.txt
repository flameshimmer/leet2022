		int maxPoints(vector<vector<int>>& points) {
			int len = points.size();
			if (len < 2) { return len; }

			int result = 0;
			int x, y, gcd;
			string key;
			for (int i = 0; i < len; i++) {
				vector<int> cur = points[i];
				int dupe = 1;
				int verCount = 0;
				int maxNonVerCount = 0;
				unordered_map<string, int> map;
				for (int j = i + 1; j < len; j++) {
					vector<int> next = points[j];
					if (cur[0] == next[0] && cur[1] == next[1]) {
						dupe++;
					}
					else if (cur[0] == next[0]) { verCount++; }
					else {
						y = next[1] - cur[1];
						x = next[0] - cur[0];
						gcd = GCD(y, x);
						key = to_string(y / gcd) + "_" + to_string(x / gcd);
						map[key]++;
						maxNonVerCount = max(maxNonVerCount, map[key]);
					}
				}
				int curResult = max(verCount, maxNonVerCount) + dupe;
				result = max(result, curResult);
			}
			return result;
		}	