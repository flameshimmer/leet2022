	    int largestRectangleArea(vector<int>& heights) {
			stack<int> s;
			heights.push_back(0); // ensure the last iterator will clear out stack

			int result = 0;
			for (int i = 0; i < heights.size(); i++) {
				if (s.empty() || heights[s.top()] <= heights[i]) {
					s.push(i);
				}
				else {
					int tmp = s.top();
					s.pop();
					int startIndex = s.empty() ? -1 : s.top(); // previous index is -1 if stack is empty
					result = max(result, heights[tmp] * (i - startIndex - 1)); // height * (nextSmallerIndex - lastSmallerIndex - 1)
					i--; // since we didn't push i in this case, i--
				}
			}
			return result;
	    }