{"title":"1289. Minimum Falling Path Sum II","description":"Given an n x n integer matrix grid, return the minimum sum of a falling path with non-zero shifts.\n\nA falling path with non-zero shifts is a choice of exactly one element from each row of grid such that no two elements chosen in adjacent rows are in the same column.\n\n \n\nExample 1:\n\nInput: arr = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 13\nExplanation: \nThe possible falling paths are:\n[1,5,9], [1,5,7], [1,6,7], [1,6,8],\n[2,4,8], [2,4,9], [2,6,7], [2,6,8],\n[3,4,8], [3,4,9], [3,5,7], [3,5,9]\nThe falling path with the smallest sum is [1,5,7], so the answer is 13.\n\n\nExample 2:\n\nInput: grid = [[7]]\nOutput: 7\n\n\n \n\nConstraints:\n\nn == grid.length == grid[i].length\n1 <= n <= 200\n-99 <= grid[i][j] <= 99","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minFallingPathSum(vector<vector<int>>& grid) {\n4\n        \n5\n    }\n6\n};"}
