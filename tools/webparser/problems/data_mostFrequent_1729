{"title":"296. Best Meeting Point","description":"Given an m x n binary grid grid where each 1 marks the home of one friend, return the minimal total travel distance.\n\nThe total travel distance is the sum of the distances between the houses of the friends and the meeting point.\n\nThe distance is calculated using Manhattan Distance, where distance(p1, p2) = |p2.x - p1.x| + |p2.y - p1.y|.\n\n \n\nExample 1:\n\nInput: grid = [[1,0,0,0,1],[0,0,0,0,0],[0,0,1,0,0]]\nOutput: 6\nExplanation: Given three friends living at (0,0), (0,4), and (2,2).\nThe point (0,2) is an ideal meeting point, as the total travel distance of 2 + 2 + 2 = 6 is minimal.\nSo return 6.\n\n\nExample 2:\n\nInput: grid = [[1,1]]\nOutput: 1\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 200\ngrid[i][j] is either 0 or 1.\nThere will be at least two friends in the grid.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minTotalDistance(vector<vector<int>>& grid) {\n4\n        \n5\n    }\n6\n};"}
