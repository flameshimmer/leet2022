{"title":"665. Non-decreasing Array","description":"Given an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most one element.\n\nWe define an array is non-decreasing if nums[i] <= nums[i + 1] holds for every i (0-based) such that (0 <= i <= n - 2).\n\n \n\nExample 1:\n\nInput: nums = [4,2,3]\nOutput: true\nExplanation: You could modify the first 4 to 1 to get a non-decreasing array.\n\n\nExample 2:\n\nInput: nums = [4,2,1]\nOutput: false\nExplanation: You can't get a non-decreasing array by modify at most one element.\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 104\n-105 <= nums[i] <= 105","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool checkPossibility(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
