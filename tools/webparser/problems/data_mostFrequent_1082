{"title":"2263. Make Array Non-decreasing or Non-increasing","description":"You are given a 0-indexed integer array nums. In one operation, you can:\n\nChoose an index i in the range 0 <= i < nums.length\nSet nums[i] to nums[i] + 1 or nums[i] - 1\n\nReturn the minimum number of operations to make nums non-decreasing or non-increasing.\n\n \n\nExample 1:\n\nInput: nums = [3,2,4,5,0]\nOutput: 4\nExplanation:\nOne possible way to turn nums into non-increasing order is to:\n- Add 1 to nums[1] once so that it becomes 3.\n- Subtract 1 from nums[2] once so it becomes 3.\n- Subtract 1 from nums[3] twice so it becomes 3.\nAfter doing the 4 operations, nums becomes [3,3,3,3,0] which is in non-increasing order.\nNote that it is also possible to turn nums into [4,4,4,4,0] in 4 operations.\nIt can be proven that 4 is the minimum number of operations needed.\n\n\nExample 2:\n\nInput: nums = [2,2,3,4]\nOutput: 0\nExplanation: nums is already in non-decreasing order, so no operations are needed and we return 0.\n\n\nExample 3:\n\nInput: nums = [0]\nOutput: 0\nExplanation: nums is already in non-decreasing order, so no operations are needed and we return 0.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] <= 1000\n\n \n\nFollow up: Can you solve it in O(n*log(n)) time complexity?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int convertArray(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
