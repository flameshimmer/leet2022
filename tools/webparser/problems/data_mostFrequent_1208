{"title":"1474. Delete N Nodes After M Nodes of a Linked List","description":"You are given the head of a linked list and two integers m and n.\n\nTraverse the linked list and remove some nodes in the following way:\n\nStart with the head as the current node.\nKeep the first m nodes starting with the current node.\nRemove the next n nodes\nKeep repeating steps 2 and 3 until you reach the end of the list.\n\nReturn the head of the modified list after removing the mentioned nodes.\n\n \n\nExample 1:\n\nInput: head = [1,2,3,4,5,6,7,8,9,10,11,12,13], m = 2, n = 3\nOutput: [1,2,6,7,11,12]\nExplanation: Keep the first (m = 2) nodes starting from the head of the linked List  (1 ->2) show in black nodes.\nDelete the next (n = 3) nodes (3 -> 4 -> 5) show in read nodes.\nContinue with the same procedure until reaching the tail of the Linked List.\nHead of the linked list after removing nodes is returned.\n\n\nExample 2:\n\nInput: head = [1,2,3,4,5,6,7,8,9,10,11], m = 1, n = 3\nOutput: [1,5,9]\nExplanation: Head of linked list after removing nodes is returned.\n\n\n \n\nConstraints:\n\nThe number of nodes in the list is in the range [1, 104].\n1 <= Node.val <= 106\n1 <= m, n <= 1000\n\n \n\nFollow up: Could you solve this problem by modifying the list in-place?","functionSig":"1\n/**\n2\n * Definition for singly-linked list.\n3\n * struct ListNode {\n4\n *     int val;\n5\n *     ListNode *next;\n6\n *     ListNode() : val(0), next(nullptr) {}\n7\n *     ListNode(int x) : val(x), next(nullptr) {}\n8\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n9\n * };\n10\n */\n11\nclass Solution {\n12\npublic:\n13\n    ListNode* deleteNodes(ListNode* head, int m, int n) {\n14\n        \n15\n    }\n16\n};"}
