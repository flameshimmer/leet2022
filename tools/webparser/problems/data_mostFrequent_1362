{"title":"2152. Minimum Number of Lines to Cover Points","description":"You are given an array points where points[i] = [xi, yi] represents a point on an X-Y plane.\n\nStraight lines are going to be added to the X-Y plane, such that every point is covered by at least one line.\n\nReturn the minimum number of straight lines needed to cover all the points.\n\n \n\nExample 1:\n\nInput: points = [[0,1],[2,3],[4,5],[4,3]]\nOutput: 2\nExplanation: The minimum number of straight lines needed is two. One possible solution is to add:\n- One line connecting the point at (0, 1) to the point at (4, 5).\n- Another line connecting the point at (2, 3) to the point at (4, 3).\n\n\nExample 2:\n\nInput: points = [[0,2],[-2,-2],[1,4]]\nOutput: 1\nExplanation: The minimum number of straight lines needed is one. The only solution is to add:\n- One line connecting the point at (-2, -2) to the point at (1, 4).\n\n\n \n\nConstraints:\n\n1 <= points.length <= 10\npoints[i].length == 2\n-100 <= xi, yi <= 100\nAll the points are unique.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minimumLines(vector<vector<int>>& points) {\n4\n        \n5\n    }\n6\n};"}
