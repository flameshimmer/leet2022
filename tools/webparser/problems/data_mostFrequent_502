{"title":"1973. Count Nodes Equal to Sum of Descendants","description":"Given the root of a binary tree, return the number of nodes where the value of the node is equal to the sum of the values of its descendants.\n\nA descendant of a node x is any node that is on the path from node x to some leaf node. The sum is considered to be 0 if the node has no descendants.\n\n \n\nExample 1:\n\nInput: root = [10,3,4,2,1]\nOutput: 2\nExplanation:\nFor the node with value 10: The sum of its descendants is 3+4+2+1 = 10.\nFor the node with value 3: The sum of its descendants is 2+1 = 3.\n\n\nExample 2:\n\nInput: root = [2,3,null,2,null]\nOutput: 0\nExplanation:\nNo node has a value that is equal to the sum of its descendants.\n\n\nExample 3:\n\nInput: root = [0]\nOutput: 1\nFor the node with value 0: The sum of its descendants is 0 since it has no descendants.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 105].\n0 <= Node.val <= 105","functionSig":"1\n/**\n2\n * Definition for a binary tree node.\n3\n * struct TreeNode {\n4\n *     int val;\n5\n *     TreeNode *left;\n6\n *     TreeNode *right;\n7\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n8\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n9\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n10\n * };\n11\n */\n12\nclass Solution {\n13\npublic:\n14\n    int equalToDescendants(TreeNode* root) {\n15\n        \n16\n    }\n17\n};"}
