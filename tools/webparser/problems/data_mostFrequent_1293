{"title":"1989. Maximum Number of People That Can Be Caught in Tag","description":"You are playing a game of tag with your friends. In tag, people are divided into two teams: people who are \"it\", and people who are not \"it\". The people who are \"it\" want to catch as many people as possible who are not \"it\".\n\nYou are given a 0-indexed integer array team containing only zeros (denoting people who are not \"it\") and ones (denoting people who are \"it\"), and an integer dist. A person who is \"it\" at index i can catch any one person whose index is in the range [i - dist, i + dist] (inclusive) and is not \"it\".\n\nReturn the maximum number of people that the people who are \"it\" can catch.\n\n \n\nExample 1:\n\nInput: team = [0,1,0,1,0], dist = 3\nOutput: 2\nExplanation:\nThe person who is \"it\" at index 1 can catch people in the range [i-dist, i+dist] = [1-3, 1+3] = [-2, 4].\nThey can catch the person who is not \"it\" at index 2.\nThe person who is \"it\" at index 3 can catch people in the range [i-dist, i+dist] = [3-3, 3+3] = [0, 6].\nThey can catch the person who is not \"it\" at index 0.\nThe person who is not \"it\" at index 4 will not be caught because the people at indices 1 and 3 are already catching one person.\n\nExample 2:\n\nInput: team = [1], dist = 1\nOutput: 0\nExplanation:\nThere are no people who are not \"it\" to catch.\n\n\nExample 3:\n\nInput: team = [0], dist = 1\nOutput: 0\nExplanation:\nThere are no people who are \"it\" to catch people.\n\n\n \n\nConstraints:\n\n1 <= team.length <= 105\n0 <= team[i] <= 1\n1 <= dist <= team.length","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int catchMaximumAmountofPeople(vector<int>& team, int dist) {\n4\n        \n5\n    }\n6\n};"}
