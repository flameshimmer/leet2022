{"title":"1073. Adding Two Negabinary Numbers","description":"Given two numbers arr1 and arr2 in base -2, return the result of adding them together.\n\nEach number is given in array format:  as an array of 0s and 1s, from most significant bit to least significant bit.  For example, arr = [1,1,0,1] represents the number (-2)^3 + (-2)^2 + (-2)^0 = -3.  A number arr in array, format is also guaranteed to have no leading zeros: either arr == [0] or arr[0] == 1.\n\nReturn the result of adding arr1 and arr2 in the same format: as an array of 0s and 1s with no leading zeros.\n\n \n\nExample 1:\n\nInput: arr1 = [1,1,1,1,1], arr2 = [1,0,1]\nOutput: [1,0,0,0,0]\nExplanation: arr1 represents 11, arr2 represents 5, the output represents 16.\n\n\nExample 2:\n\nInput: arr1 = [0], arr2 = [0]\nOutput: [0]\n\n\nExample 3:\n\nInput: arr1 = [0], arr2 = [1]\nOutput: [1]\n\n\n \n\nConstraints:\n\n1 <= arr1.length, arr2.length <= 1000\narr1[i] and arr2[i] are 0 or 1\narr1 and arr2 have no leading zeros","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> addNegabinary(vector<int>& arr1, vector<int>& arr2) {\n4\n        \n5\n    }\n6\n};"}
