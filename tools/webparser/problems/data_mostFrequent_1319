{"title":"1933. Check if String Is Decomposable Into Value-Equal Substrings","description":"A value-equal string is a string where all characters are the same.\n\nFor example, \"1111\" and \"33\" are value-equal strings.\nIn contrast, \"123\" is not a value-equal string.\n\nGiven a digit string s, decompose the string into some number of consecutive value-equal substrings where exactly one substring has a length of 2 and the remaining substrings have a length of 3.\n\nReturn true if you can decompose s according to the above rules. Otherwise, return false.\n\nA substring is a contiguous sequence of characters in a string.\n\n \n\nExample 1:\n\nInput: s = \"000111000\"\nOutput: false\nExplanation: s cannot be decomposed according to the rules because [\"000\", \"111\", \"000\"] does not have a substring of length 2.\n\n\nExample 2:\n\nInput: s = \"00011111222\"\nOutput: true\nExplanation: s can be decomposed into [\"000\", \"111\", \"11\", \"222\"].\n\n\nExample 3:\n\nInput: s = \"011100022233\"\nOutput: false\nExplanation: s cannot be decomposed according to the rules because of the first '0'.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns consists of only digits '0' through '9'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool isDecomposable(string s) {\n4\n        \n5\n    }\n6\n};"}
