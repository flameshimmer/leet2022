{"title":"1940. Longest Common Subsequence Between Sorted Arrays","description":"Given an array of integer arrays arrays where each arrays[i] is sorted in strictly increasing order, return an integer array representing the longest common subsequence between all the arrays.\n\nA subsequence is a sequence that can be derived from another sequence by deleting some elements (possibly none) without changing the order of the remaining elements.\n\n \n\nExample 1:\n\nInput: arrays = [[1,3,4],\n                 [1,4,7,9]]\nOutput: [1,4]\nExplanation: The longest common subsequence in the two arrays is [1,4].\n\n\nExample 2:\n\nInput: arrays = [[2,3,6,8],\n                 [1,2,3,5,6,7,10],\n                 [2,3,4,6,9]]\nOutput: [2,3,6]\nExplanation: The longest common subsequence in all three arrays is [2,3,6].\n\n\nExample 3:\n\nInput: arrays = [[1,2,3,4,5],\n                 [6,7,8]]\nOutput: []\nExplanation: There is no common subsequence between the two arrays.\n\n\n \n\nConstraints:\n\n2 <= arrays.length <= 100\n1 <= arrays[i].length <= 100\n1 <= arrays[i][j] <= 100\narrays[i] is sorted in strictly increasing order.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> longestCommonSubsequence(vector<vector<int>>& arrays) {\n4\n        \n5\n    }\n6\n};"}
