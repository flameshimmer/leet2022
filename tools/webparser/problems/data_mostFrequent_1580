{"title":"715. Range Module","description":"A Range Module is a module that tracks ranges of numbers. Design a data structure to track the ranges represented as half-open intervals and query about them.\n\nA half-open interval [left, right) denotes all the real numbers x where left <= x < right.\n\nImplement the RangeModule class:\n\nRangeModule() Initializes the object of the data structure.\nvoid addRange(int left, int right) Adds the half-open interval [left, right), tracking every real number in that interval. Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval [left, right) that are not already tracked.\nboolean queryRange(int left, int right) Returns true if every real number in the interval [left, right) is currently being tracked, and false otherwise.\nvoid removeRange(int left, int right) Stops tracking every real number currently being tracked in the half-open interval [left, right).\n\n \n\nExample 1:\n\nInput\n[\"RangeModule\", \"addRange\", \"removeRange\", \"queryRange\", \"queryRange\", \"queryRange\"]\n[[], [10, 20], [14, 16], [10, 14], [13, 15], [16, 17]]\nOutput\n[null, null, null, true, false, true]\n\nExplanation\nRangeModule rangeModule = new RangeModule();\nrangeModule.addRange(10, 20);\nrangeModule.removeRange(14, 16);\nrangeModule.queryRange(10, 14); // return True,(Every number in [10, 14) is being tracked)\nrangeModule.queryRange(13, 15); // return False,(Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\nrangeModule.queryRange(16, 17); // return True, (The number 16 in [16, 17) is still being tracked, despite the remove operation)\n\n\n \n\nConstraints:\n\n1 <= left < right <= 109\nAt most 104 calls will be made to addRange, queryRange, and removeRange.","functionSig":"1\nclass RangeModule {\n2\npublic:\n3\n    RangeModule() {\n4\n        \n5\n    }\n6\n    \n7\n    void addRange(int left, int right) {\n8\n        \n9\n    }\n10\n    \n11\n    bool queryRange(int left, int right) {\n12\n        \n13\n    }\n14\n    \n15\n    void removeRange(int left, int right) {\n16\n        \n17\n    }\n18\n};\n19\n​\n20\n/**\n21\n * Your RangeModule object will be instantiated and called as such:\n22\n * RangeModule* obj = new RangeModule();\n23\n * obj->addRange(left,right);\n24\n * bool param_2 = obj->queryRange(left,right);\n25\n * obj->removeRange(left,right);\n26\n */"}
