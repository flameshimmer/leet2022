{"title":"1702. Maximum Binary String After Change","description":"You are given a binary string binary consisting of only 0's or 1's. You can apply each of the following operations any number of times:\n\nOperation 1: If the number contains the substring \"00\", you can replace it with \"10\".\nFor example, \"00010\" -> \"10010\"\nOperation 2: If the number contains the substring \"10\", you can replace it with \"01\".\nFor example, \"00010\" -> \"00001\"\n\nReturn the maximum binary string you can obtain after any number of operations. Binary string x is greater than binary string y if x's decimal representation is greater than y's decimal representation.\n\n \n\nExample 1:\n\nInput: binary = \"000110\"\nOutput: \"111011\"\nExplanation: A valid transformation sequence can be:\n\"000110\" -> \"000101\" \n\"000101\" -> \"100101\" \n\"100101\" -> \"110101\" \n\"110101\" -> \"110011\" \n\"110011\" -> \"111011\"\n\n\nExample 2:\n\nInput: binary = \"01\"\nOutput: \"01\"\nExplanation: \"01\" cannot be transformed any further.\n\n\n \n\nConstraints:\n\n1 <= binary.length <= 105\nbinary consist of '0' and '1'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string maximumBinaryString(string binary) {\n4\n        \n5\n    }\n6\n};"}
