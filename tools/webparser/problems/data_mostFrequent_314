{"title":"1092. Shortest Common Supersequence","description":"Given two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences. If there are multiple valid strings, return any of them.\n\nA string s is a subsequence of string t if deleting some number of characters from t (possibly 0) results in the string s.\n\n \n\nExample 1:\n\nInput: str1 = \"abac\", str2 = \"cab\"\nOutput: \"cabac\"\nExplanation: \nstr1 = \"abac\" is a subsequence of \"cabac\" because we can delete the first \"c\".\nstr2 = \"cab\" is a subsequence of \"cabac\" because we can delete the last \"ac\".\nThe answer provided is the shortest such string that satisfies these properties.\n\n\nExample 2:\n\nInput: str1 = \"aaaaaaaa\", str2 = \"aaaaaaaa\"\nOutput: \"aaaaaaaa\"\n\n\n \n\nConstraints:\n\n1 <= str1.length, str2.length <= 1000\nstr1 and str2 consist of lowercase English letters.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string shortestCommonSupersequence(string str1, string str2) {\n4\n        \n5\n    }\n6\n};"}
