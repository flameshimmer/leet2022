{"title":"1065. Index Pairs of a String","description":"Given a string text and an array of strings words, return an array of all index pairs [i, j] so that the substring text[i...j] is in words.\n\nReturn the pairs [i, j] in sorted order (i.e., sort them by their first coordinate, and in case of ties sort them by their second coordinate).\n\n \n\nExample 1:\n\nInput: text = \"thestoryofleetcodeandme\", words = [\"story\",\"fleet\",\"leetcode\"]\nOutput: [[3,7],[9,13],[10,17]]\n\n\nExample 2:\n\nInput: text = \"ababa\", words = [\"aba\",\"ab\"]\nOutput: [[0,1],[0,2],[2,3],[2,4]]\nExplanation: Notice that matches can overlap, see \"aba\" is found in [0,2] and [2,4].\n\n\n \n\nConstraints:\n\n1 <= text.length <= 100\n1 <= words.length <= 20\n1 <= words[i].length <= 50\ntext and words[i] consist of lowercase English letters.\nAll the strings of words are unique.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<vector<int>> indexPairs(string text, vector<string>& words) {\n4\n        \n5\n    }\n6\n};"}
