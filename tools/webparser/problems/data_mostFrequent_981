{"title":"573. Squirrel Simulation","description":"You are given two integers height and width representing a garden of size height x width. You are also given:\n\nan array tree where tree = [treer, treec] is the position of the tree in the garden,\nan array squirrel where squirrel = [squirrelr, squirrelc] is the position of the squirrel in the garden,\nand an array nuts where nuts[i] = [nutir, nutic] is the position of the ith nut in the garden.\n\nThe squirrel can only take at most one nut at one time and can move in four directions: up, down, left, and right, to the adjacent cell.\n\nReturn the minimal distance for the squirrel to collect all the nuts and put them under the tree one by one.\n\nThe distance is the number of moves.\n\n \n\nExample 1:\n\nInput: height = 5, width = 7, tree = [2,2], squirrel = [4,4], nuts = [[3,0], [2,5]]\nOutput: 12\nExplanation: The squirrel should go to the nut at [2, 5] first to achieve a minimal distance.\n\n\nExample 2:\n\nInput: height = 1, width = 3, tree = [0,1], squirrel = [0,0], nuts = [[0,2]]\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= height, width <= 100\ntree.length == 2\nsquirrel.length == 2\n1 <= nuts.length <= 5000\nnuts[i].length == 2\n0 <= treer, squirrelr, nutir <= height\n0 <= treec, squirrelc, nutic <= width","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minDistance(int height, int width, vector<int>& tree, vector<int>& squirrel, vector<vector<int>>& nuts) {\n4\n        \n5\n    }\n6\n};"}
