{"title":"1221. Split a String in Balanced Strings","description":"Balanced strings are those that have an equal quantity of 'L' and 'R' characters.\n\nGiven a balanced string s, split it in the maximum amount of balanced strings.\n\nReturn the maximum amount of split balanced strings.\n\n \n\nExample 1:\n\nInput: s = \"RLRRLLRLRL\"\nOutput: 4\nExplanation: s can be split into \"RL\", \"RRLL\", \"RL\", \"RL\", each substring contains same number of 'L' and 'R'.\n\n\nExample 2:\n\nInput: s = \"RLLLLRRRLR\"\nOutput: 3\nExplanation: s can be split into \"RL\", \"LLLRRR\", \"LR\", each substring contains same number of 'L' and 'R'.\n\n\nExample 3:\n\nInput: s = \"LLLLRRRR\"\nOutput: 1\nExplanation: s can be split into \"LLLLRRRR\".\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns[i] is either 'L' or 'R'.\ns is a balanced string.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int balancedStringSplit(string s) {\n4\n        \n5\n    }\n6\n};"}
