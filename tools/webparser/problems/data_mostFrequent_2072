{"title":"186. Reverse Words in a String II","description":"Given a character array s, reverse the order of the words.\n\nA word is defined as a sequence of non-space characters. The words in s will be separated by a single space.\n\nYour code must solve the problem in-place, i.e. without allocating extra space.\n\n \n\nExample 1:\n\nInput: s = [\"t\",\"h\",\"e\",\" \",\"s\",\"k\",\"y\",\" \",\"i\",\"s\",\" \",\"b\",\"l\",\"u\",\"e\"]\nOutput: [\"b\",\"l\",\"u\",\"e\",\" \",\"i\",\"s\",\" \",\"s\",\"k\",\"y\",\" \",\"t\",\"h\",\"e\"]\n\n\nExample 2:\n\nInput: s = [\"a\"]\nOutput: [\"a\"]\n\n\n \n\nConstraints:\n\n1 <= s.length <= 105\ns[i] is an English letter (uppercase or lowercase), digit, or space ' '.\nThere is at least one word in s.\ns does not contain leading or trailing spaces.\nAll the words in s are guaranteed to be separated by a single space.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    void reverseWords(vector<char>& s) {\n4\n        \n5\n    }\n6\n};"}
