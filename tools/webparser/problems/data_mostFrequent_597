{"title":"369. Plus One Linked List","description":"Given a non-negative integer represented as a linked list of digits, plus one to the integer.\n\nThe digits are stored such that the most significant digit is at the head of the list.\n\n \n\nExample 1:\n\nInput: head = [1,2,3]\nOutput: [1,2,4]\n\n\nExample 2:\n\nInput: head = [0]\nOutput: [1]\n\n\n \n\nConstraints:\n\nThe number of nodes in the linked list is in the range [1, 100].\n0 <= Node.val <= 9\nThe number represented by the linked list does not contain leading zeros except for the zero itself. ","functionSig":"1\n/**\n2\n * Definition for singly-linked list.\n3\n * struct ListNode {\n4\n *     int val;\n5\n *     ListNode *next;\n6\n *     ListNode() : val(0), next(nullptr) {}\n7\n *     ListNode(int x) : val(x), next(nullptr) {}\n8\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n9\n * };\n10\n */\n11\nclass Solution {\n12\npublic:\n13\n    ListNode* plusOne(ListNode* head) {\n14\n        \n15\n    }\n16\n};"}
