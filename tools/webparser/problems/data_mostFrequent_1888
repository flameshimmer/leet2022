{"title":"259. 3Sum Smaller","description":"Given an array of n integers nums and an integer target, find the number of index triplets i, j, k with 0 <= i < j < k < n that satisfy the condition nums[i] + nums[j] + nums[k] < target.\n\n \n\nExample 1:\n\nInput: nums = [-2,0,1,3], target = 2\nOutput: 2\nExplanation: Because there are two triplets which sums are less than 2:\n[-2,0,1]\n[-2,0,3]\n\n\nExample 2:\n\nInput: nums = [], target = 0\nOutput: 0\n\n\nExample 3:\n\nInput: nums = [0], target = 0\nOutput: 0\n\n\n \n\nConstraints:\n\nn == nums.length\n0 <= n <= 3500\n-100 <= nums[i] <= 100\n-100 <= target <= 100","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int threeSumSmaller(vector<int>& nums, int target) {\n4\n        \n5\n    }\n6\n};"}
