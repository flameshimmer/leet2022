{"title":"358. Rearrange String k Distance Apart","description":"Given a string s and an integer k, rearrange s such that the same characters are at least distance k from each other. If it is not possible to rearrange the string, return an empty string \"\".\n\n \n\nExample 1:\n\nInput: s = \"aabbcc\", k = 3\nOutput: \"abcabc\"\nExplanation: The same letters are at least a distance of 3 from each other.\n\n\nExample 2:\n\nInput: s = \"aaabc\", k = 3\nOutput: \"\"\nExplanation: It is not possible to rearrange the string.\n\n\nExample 3:\n\nInput: s = \"aaadbbcc\", k = 2\nOutput: \"abacabcd\"\nExplanation: The same letters are at least a distance of 2 from each other.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 3 * 105\ns consists of only lowercase English letters.\n0 <= k <= s.length","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string rearrangeString(string s, int k) {\n4\n        \n5\n    }\n6\n};"}
