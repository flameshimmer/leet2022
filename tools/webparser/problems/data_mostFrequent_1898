{"title":"582. Kill Process","description":"You have n processes forming a rooted tree structure. You are given two integer arrays pid and ppid, where pid[i] is the ID of the ith process and ppid[i] is the ID of the ith process's parent process.\n\nEach process has only one parent process but may have multiple children processes. Only one process has ppid[i] = 0, which means this process has no parent process (the root of the tree).\n\nWhen a process is killed, all of its children processes will also be killed.\n\nGiven an integer kill representing the ID of a process you want to kill, return a list of the IDs of the processes that will be killed. You may return the answer in any order.\n\n \n\nExample 1:\n\nInput: pid = [1,3,10,5], ppid = [3,0,5,3], kill = 5\nOutput: [5,10]\nExplanation: The processes colored in red are the processes that should be killed.\n\n\nExample 2:\n\nInput: pid = [1], ppid = [0], kill = 1\nOutput: [1]\n\n\n \n\nConstraints:\n\nn == pid.length\nn == ppid.length\n1 <= n <= 5 * 104\n1 <= pid[i] <= 5 * 104\n0 <= ppid[i] <= 5 * 104\nOnly one process has no parent.\nAll the values of pid are unique.\nkill is guaranteed to be in pid.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> killProcess(vector<int>& pid, vector<int>& ppid, int kill) {\n4\n        \n5\n    }\n6\n};"}
