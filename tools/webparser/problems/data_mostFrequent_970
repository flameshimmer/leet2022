{"title":"467. Unique Substrings in Wraparound String","description":"We define the string s to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so s will look like this:\n\n\"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\n\nGiven a string p, return the number of unique non-empty substrings of p are present in s.\n\n \n\nExample 1:\n\nInput: p = \"a\"\nOutput: 1\nExplanation: Only the substring \"a\" of p is in s.\n\n\nExample 2:\n\nInput: p = \"cac\"\nOutput: 2\nExplanation: There are two substrings (\"a\", \"c\") of p in s.\n\n\nExample 3:\n\nInput: p = \"zab\"\nOutput: 6\nExplanation: There are six substrings (\"z\", \"a\", \"b\", \"za\", \"ab\", and \"zab\") of p in s.\n\n\n \n\nConstraints:\n\n1 <= p.length <= 105\np consists of lowercase English letters.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int findSubstringInWraproundString(string p) {\n4\n        \n5\n    }\n6\n};"}
