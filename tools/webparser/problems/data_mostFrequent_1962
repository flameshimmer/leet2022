{"title":"1585. Check If String Is Transformable With Substring Sort Operations","description":"Given two strings s and t, transform string s into string t using the following operation any number of times:\n\nChoose a non-empty substring in s and sort it in place so the characters are in ascending order.\nFor example, applying the operation on the underlined substring in \"14234\" results in \"12344\".\n\nReturn true if it is possible to transform s into t. Otherwise, return false.\n\nA substring is a contiguous sequence of characters within a string.\n\n \n\nExample 1:\n\nInput: s = \"84532\", t = \"34852\"\nOutput: true\nExplanation: You can transform s into t using the following sort operations:\n\"84532\" (from index 2 to 3) -> \"84352\"\n\"84352\" (from index 0 to 2) -> \"34852\"\n\n\nExample 2:\n\nInput: s = \"34521\", t = \"23415\"\nOutput: true\nExplanation: You can transform s into t using the following sort operations:\n\"34521\" -> \"23451\"\n\"23451\" -> \"23415\"\n\n\nExample 3:\n\nInput: s = \"12345\", t = \"12435\"\nOutput: false\n\n\n \n\nConstraints:\n\ns.length == t.length\n1 <= s.length <= 105\ns and t consist of only digits.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool isTransformable(string s, string t) {\n4\n        \n5\n    }\n6\n};"}
