{"title":"136. Single Number","description":"Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.\n\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n\n \n\nExample 1:\n\nInput: nums = [2,2,1]\nOutput: 1\n\n\nExample 2:\n\nInput: nums = [4,1,2,1,2]\nOutput: 4\n\n\nExample 3:\n\nInput: nums = [1]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-3 * 104 <= nums[i] <= 3 * 104\nEach element in the array appears twice except for one element which appears only once.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int singleNumber(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
