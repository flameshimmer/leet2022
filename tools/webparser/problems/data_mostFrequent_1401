{"title":"317. Shortest Distance from All Buildings","description":"You are given an m x n grid grid of values 0, 1, or 2, where:\n\neach 0 marks an empty land that you can pass by freely,\neach 1 marks a building that you cannot pass through, and\neach 2 marks an obstacle that you cannot pass through.\n\nYou want to build a house on an empty land that reaches all buildings in the shortest total travel distance. You can only move up, down, left, and right.\n\nReturn the shortest travel distance for such a house. If it is not possible to build such a house according to the above rules, return -1.\n\nThe total travel distance is the sum of the distances between the houses of the friends and the meeting point.\n\nThe distance is calculated using Manhattan Distance, where distance(p1, p2) = |p2.x - p1.x| + |p2.y - p1.y|.\n\n \n\nExample 1:\n\nInput: grid = [[1,0,2,0,1],[0,0,0,0,0],[0,0,1,0,0]]\nOutput: 7\nExplanation: Given three buildings at (0,0), (0,4), (2,2), and an obstacle at (0,2).\nThe point (1,2) is an ideal empty land to build a house, as the total travel distance of 3+3+1=7 is minimal.\nSo return 7.\n\n\nExample 2:\n\nInput: grid = [[1,0]]\nOutput: 1\n\n\nExample 3:\n\nInput: grid = [[1]]\nOutput: -1\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 50\ngrid[i][j] is either 0, 1, or 2.\nThere will be at least one building in the grid.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int shortestDistance(vector<vector<int>>& grid) {\n4\n        \n5\n    }\n6\n};"}
