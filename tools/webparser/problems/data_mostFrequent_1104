{"title":"791. Custom Sort String","description":"You are given two strings order and s. All the words of order are unique and were sorted in some custom order previously.\n\nPermute the characters of s so that they match the order that order was sorted. More specifically, if a character x occurs before a character y in order, then x should occur before y in the permuted string.\n\nReturn any permutation of s that satisfies this property.\n\n \n\nExample 1:\n\nInput: order = \"cba\", s = \"abcd\"\nOutput: \"cbad\"\nExplanation: \n\"a\", \"b\", \"c\" appear in order, so the order of \"a\", \"b\", \"c\" should be \"c\", \"b\", and \"a\". \nSince \"d\" does not appear in order, it can be at any position in the returned string. \"dcba\", \"cdba\", \"cbda\" are also valid outputs.\n\n\nExample 2:\n\nInput: order = \"cbafg\", s = \"abcd\"\nOutput: \"cbad\"\n\n\n \n\nConstraints:\n\n1 <= order.length <= 26\n1 <= s.length <= 200\norder and s consist of lowercase English letters.\nAll the characters of order are unique.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string customSortString(string order, string s) {\n4\n        \n5\n    }\n6\n};"}
