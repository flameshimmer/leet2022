{"title":"1516. Move Sub-Tree of N-Ary Tree","description":"Given the root of an N-ary tree of unique values, and two nodes of the tree p and q.\n\nYou should move the subtree of the node p to become a direct child of node q. If p is already a direct child of q, do not change anything. Node p must be the last child in the children list of node q.\n\nReturn the root of the tree after adjusting it.\n\n \n\nThere are 3 cases for nodes p and q:\n\nNode q is in the sub-tree of node p.\nNode p is in the sub-tree of node q.\nNeither node p is in the sub-tree of node q nor node q is in the sub-tree of node p.\n\nIn cases 2 and 3, you just need to move p (with its sub-tree) to be a child of q, but in case 1 the tree may be disconnected, thus you need to reconnect the tree again. Please read the examples carefully before solving this problem.\n\n \n\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\nFor example, the above tree is serialized as [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14].\n\n \n\nExample 1:\n\nInput: root = [1,null,2,3,null,4,5,null,6,null,7,8], p = 4, q = 1\nOutput: [1,null,2,3,4,null,5,null,6,null,7,8]\nExplanation: This example follows the second case as node p is in the sub-tree of node q. We move node p with its sub-tree to be a direct child of node q.\nNotice that node 4 is the last child of node 1.\n\nExample 2:\n\nInput: root = [1,null,2,3,null,4,5,null,6,null,7,8], p = 7, q = 4\nOutput: [1,null,2,3,null,4,5,null,6,null,7,8]\nExplanation: Node 7 is already a direct child of node 4. We don't change anything.\n\n\nExample 3:\n\nInput: root = [1,null,2,3,null,4,5,null,6,null,7,8], p = 3, q = 8\nOutput: [1,null,2,null,4,5,null,7,8,null,null,null,3,null,6]\nExplanation: This example follows case 3 because node p is not in the sub-tree of node q and vice-versa. We can move node 3 with its sub-tree and make it as node 8's child.\n\n\n \n\nConstraints:\n\nThe total number of nodes is between [2, 1000].\nEach node has a unique value.\np != null\nq != null\np and q are two different nodes (i.e. p != q).","functionSig":"1\n/*\n2\n// Definition for a Node.\n3\nclass Node {\n4\npublic:\n5\n    int val;\n6\n    vector<Node*> children;\n7\n​\n8\n    Node() {}\n9\n​\n10\n    Node(int _val) {\n11\n        val = _val;\n12\n    }\n13\n​\n14\n    Node(int _val, vector<Node*> _children) {\n15\n        val = _val;\n16\n        children = _children;\n17\n    }\n18\n};\n19\n*/\n20\n​\n21\nclass Solution {\n22\npublic:\n23\n    Node* moveSubTree(Node* root, Node* p, Node* q) {\n24\n        \n25\n    }\n26\n};"}
