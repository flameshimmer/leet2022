{"title":"420. Strong Password Checker","description":"A password is considered strong if the below conditions are all met:\n\nIt has at least 6 characters and at most 20 characters.\nIt contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\nIt does not contain three repeating characters in a row (i.e., \"...aaa...\" is weak, but \"...aa...a...\" is strong, assuming other conditions are met).\n\nGiven a string password, return the minimum number of steps required to make password strong. if password is already strong, return 0.\n\nIn one step, you can:\n\nInsert one character to password,\nDelete one character from password, or\nReplace one character of password with another character.\n\n \n\nExample 1:\n\nInput: password = \"a\"\nOutput: 5\n\n\nExample 2:\n\nInput: password = \"aA1\"\nOutput: 3\n\n\nExample 3:\n\nInput: password = \"1337C0d3\"\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= password.length <= 50\npassword consists of letters, digits, dot '.' or exclamation mark '!'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int strongPasswordChecker(string password) {\n4\n        \n5\n    }\n6\n};"}
