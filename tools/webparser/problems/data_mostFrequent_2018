{"title":"1062. Longest Repeating Substring","description":"Given a string s, return the length of the longest repeating substrings. If no repeating substring exists, return 0.\n\n \n\nExample 1:\n\nInput: s = \"abcd\"\nOutput: 0\nExplanation: There is no repeating substring.\n\n\nExample 2:\n\nInput: s = \"abbaba\"\nOutput: 2\nExplanation: The longest repeating substrings are \"ab\" and \"ba\", each of which occurs twice.\n\n\nExample 3:\n\nInput: s = \"aabcaabdaab\"\nOutput: 3\nExplanation: The longest repeating substring is \"aab\", which occurs 3 times.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 2000\ns consists of lowercase English letters.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int longestRepeatingSubstring(string s) {\n4\n        \n5\n    }\n6\n};"}
