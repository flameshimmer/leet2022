{"title":"2077. Paths in Maze That Lead to Same Room","description":"A maze consists of n rooms numbered from 1 to n, and some rooms are connected by corridors. You are given a 2D integer array corridors where corridors[i] = [room1i, room2i] indicates that there is a corridor connecting room1i and room2i, allowing a person in the maze to go from room1i to room2i and vice versa.\n\nThe designer of the maze wants to know how confusing the maze is. The confusion score of the maze is the number of different cycles of length 3.\n\nFor example, 1 → 2 → 3 → 1 is a cycle of length 3, but 1 → 2 → 3 → 4 and 1 → 2 → 3 → 2 → 1 are not.\n\nTwo cycles are considered to be different if one or more of the rooms visited in the first cycle is not in the second cycle.\n\nReturn the confusion score of the maze.\n\n \n\nExample 1:\n\nInput: n = 5, corridors = [[1,2],[5,2],[4,1],[2,4],[3,1],[3,4]]\nOutput: 2\nExplanation:\nOne cycle of length 3 is 4 → 1 → 3 → 4, denoted in red.\nNote that this is the same cycle as 3 → 4 → 1 → 3 or 1 → 3 → 4 → 1 because the rooms are the same.\nAnother cycle of length 3 is 1 → 2 → 4 → 1, denoted in blue.\nThus, there are two different cycles of length 3.\n\n\nExample 2:\n\nInput: n = 4, corridors = [[1,2],[3,4]]\nOutput: 0\nExplanation:\nThere are no cycles of length 3.\n\n\n \n\nConstraints:\n\n2 <= n <= 1000\n1 <= corridors.length <= 5 * 104\ncorridors[i].length == 2\n1 <= room1i, room2i <= n\nroom1i != room2i\nThere are no duplicate corridors.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int numberOfPaths(int n, vector<vector<int>>& corridors) {\n4\n        \n5\n    }\n6\n};"}
