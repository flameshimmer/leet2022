{"title":"1918. Kth Smallest Subarray Sum","description":"Given an integer array nums of length n and an integer k, return the kth smallest subarray sum.\n\nA subarray is defined as a non-empty contiguous sequence of elements in an array. A subarray sum is the sum of all elements in the subarray.\n\n \n\nExample 1:\n\nInput: nums = [2,1,3], k = 4\nOutput: 3\nExplanation: The subarrays of [2,1,3] are:\n- [2] with sum 2\n- [1] with sum 1\n- [3] with sum 3\n- [2,1] with sum 3\n- [1,3] with sum 4\n- [2,1,3] with sum 6 \nOrdering the sums from smallest to largest gives 1, 2, 3, 3, 4, 6. The 4th smallest is 3.\n\n\nExample 2:\n\nInput: nums = [3,3,5,5], k = 7\nOutput: 10\nExplanation: The subarrays of [3,3,5,5] are:\n- [3] with sum 3\n- [3] with sum 3\n- [5] with sum 5\n- [5] with sum 5\n- [3,3] with sum 6\n- [3,5] with sum 8\n- [5,5] with sum 10\n- [3,3,5], with sum 11\n- [3,5,5] with sum 13\n- [3,3,5,5] with sum 16\nOrdering the sums from smallest to largest gives 3, 3, 5, 5, 6, 8, 10, 11, 13, 16. The 7th smallest is 10.\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 2 * 104\n1 <= nums[i] <= 5 * 104\n1 <= k <= n * (n + 1) / 2","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int kthSmallestSubarraySum(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
