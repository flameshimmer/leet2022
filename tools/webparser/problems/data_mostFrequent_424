{"title":"1120. Maximum Average Subtree","description":"Given the root of a binary tree, return the maximum average value of a subtree of that tree. Answers within 10-5 of the actual answer will be accepted.\n\nA subtree of a tree is any node of that tree plus all its descendants.\n\nThe average value of a tree is the sum of its values, divided by the number of nodes.\n\n \n\nExample 1:\n\nInput: root = [5,6,1]\nOutput: 6.00000\nExplanation: \nFor the node with value = 5 we have an average of (5 + 6 + 1) / 3 = 4.\nFor the node with value = 6 we have an average of 6 / 1 = 6.\nFor the node with value = 1 we have an average of 1 / 1 = 1.\nSo the answer is 6 which is the maximum.\n\n\nExample 2:\n\nInput: root = [0,null,1]\nOutput: 1.00000\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n0 <= Node.val <= 105","functionSig":"1\n/**\n2\n * Definition for a binary tree node.\n3\n * struct TreeNode {\n4\n *     int val;\n5\n *     TreeNode *left;\n6\n *     TreeNode *right;\n7\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n8\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n9\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n10\n * };\n11\n */\n12\nclass Solution {\n13\npublic:\n14\n    double maximumAverageSubtree(TreeNode* root) {\n15\n        \n16\n    }\n17\n};"}
