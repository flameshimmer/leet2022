{"title":"1150. Check If a Number Is Majority Element in a Sorted Array","description":"Given an integer array nums sorted in non-decreasing order and an integer target, return true if target is a majority element, or false otherwise.\n\nA majority element in an array nums is an element that appears more than nums.length / 2 times in the array.\n\n \n\nExample 1:\n\nInput: nums = [2,4,5,5,5,5,5,6,6], target = 5\nOutput: true\nExplanation: The value 5 appears 5 times and the length of the array is 9.\nThus, 5 is a majority element because 5 > 9/2 is true.\n\n\nExample 2:\n\nInput: nums = [10,100,101,101], target = 101\nOutput: false\nExplanation: The value 101 appears 2 times and the length of the array is 4.\nThus, 101 is not a majority element because 2 > 4/2 is false.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i], target <= 109\nnums is sorted in non-decreasing order.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool isMajorityElement(vector<int>& nums, int target) {\n4\n        \n5\n    }\n6\n};"}
