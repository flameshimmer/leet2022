{"title":"250. Count Univalue Subtrees","description":"Given the root of a binary tree, return the number of uni-value subtrees.\n\nA uni-value subtree means all nodes of the subtree have the same value.\n\n \n\nExample 1:\n\nInput: root = [5,1,5,5,5,null,5]\nOutput: 4\n\n\nExample 2:\n\nInput: root = []\nOutput: 0\n\n\nExample 3:\n\nInput: root = [5,5,5,5,5,null,5]\nOutput: 6\n\n\n \n\nConstraints:\n\nThe number of the node in the tree will be in the range [0, 1000].\n-1000 <= Node.val <= 1000","functionSig":"1\n/**\n2\n * Definition for a binary tree node.\n3\n * struct TreeNode {\n4\n *     int val;\n5\n *     TreeNode *left;\n6\n *     TreeNode *right;\n7\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n8\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n9\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n10\n * };\n11\n */\n12\nclass Solution {\n13\npublic:\n14\n    int countUnivalSubtrees(TreeNode* root) {\n15\n        \n16\n    }\n17\n};"}
