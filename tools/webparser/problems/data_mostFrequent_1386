{"title":"2254. Design Video Sharing Platform","description":"You have a video sharing platform where users can upload and delete videos. Each video is a string of digits, where the ith digit of the string represents the content of the video at minute i. For example, the first digit represents the content at minute 0 in the video, the second digit represents the content at minute 1 in the video, and so on. Viewers of videos can also like and dislike videos. Internally, the platform keeps track of the number of views, likes, and dislikes on each video.\n\nWhen a video is uploaded, it is associated with the smallest available integer videoId starting from 0. Once a video is deleted, the videoId associated with that video can be reused for another video.\n\nImplement the VideoSharingPlatform class:\n\nVideoSharingPlatform() Initializes the object.\nint upload(String video) The user uploads a video. Return the videoId associated with the video.\nvoid remove(int videoId) If there is a video associated with videoId, remove the video.\nString watch(int videoId, int startMinute, int endMinute) If there is a video associated with videoId, increase the number of views on the video by 1 and return the substring of the video string starting at startMinute and ending at min(endMinute, video.length - 1) (inclusive). Otherwise, return \"-1\".\nvoid like(int videoId) Increases the number of likes on the video associated with videoId by 1 if there is a video associated with videoId.\nvoid dislike(int videoId) Increases the number of dislikes on the video associated with videoId by 1 if there is a video associated with videoId.\nint[] getLikesAndDislikes(int videoId) Return a 0-indexed integer array values of length 2 where values[0] is the number of likes and values[1] is the number of dislikes on the video associated with videoId. If there is no video associated with videoId, return [-1].\nint getViews(int videoId) Return the number of views on the video associated with videoId, if there is no video associated with videoId, return -1.\n\n \n\nExample 1:\n\nInput\n[\"VideoSharingPlatform\", \"upload\", \"upload\", \"remove\", \"remove\", \"upload\", \"watch\", \"watch\", \"like\", \"dislike\", \"dislike\", \"getLikesAndDislikes\", \"getViews\"]\n[[], [\"123\"], [\"456\"], [4], [0], [\"789\"], [1, 0, 5], [1, 0, 1], [1], [1], [1], [1], [1]]\nOutput\n[null, 0, 1, null, null, 0, \"456\", \"45\", null, null, null, [1, 2], 2]\n\nExplanation\nVideoSharingPlatform videoSharingPlatform = new VideoSharingPlatform();\nvideoSharingPlatform.upload(\"123\");          // The smallest available videoId is 0, so return 0.\nvideoSharingPlatform.upload(\"456\");          // The smallest available videoId is 1, so return 1.\nvideoSharingPlatform.remove(4);              // There is no video associated with videoId 4, so do nothing.\nvideoSharingPlatform.remove(0);              // Remove the video associated with videoId 0.\nvideoSharingPlatform.upload(\"789\");          // Since the video associated with videoId 0 was deleted,\n                                             // 0 is the smallest available videoId, so return 0.\nvideoSharingPlatform.watch(1, 0, 5);         // The video associated with videoId 1 is \"456\".\n                                             // The video from minute 0 to min(5, 3 - 1) = 2 is \"456\", so return \"453\".\nvideoSharingPlatform.watch(1, 0, 1);         // The video associated with videoId 1 is \"456\".\n                                             // The video from minute 0 to min(1, 3 - 1) = 1 is \"45\", so return \"45\".\nvideoSharingPlatform.like(1);                // Increase the number of likes on the video associated with videoId 1.\nvideoSharingPlatform.dislike(1);             // Increase the number of dislikes on the video associated with videoId 1.\nvideoSharingPlatform.dislike(1);             // Increase the number of dislikes on the video associated with videoId 1.\nvideoSharingPlatform.getLikesAndDislikes(1); // There is 1 like and 2 dislikes on the video associated with videoId 1, so return [1, 2].\nvideoSharingPlatform.getViews(1);            // The video associated with videoId 1 has 2 views, so return 2.\n\n\nExample 2:\n\nInput\n[\"VideoSharingPlatform\", \"remove\", \"watch\", \"like\", \"dislike\", \"getLikesAndDislikes\", \"getViews\"]\n[[], [0], [0, 0, 1], [0], [0], [0], [0]]\nOutput\n[null, null, \"-1\", null, null, [-1], -1]\n\nExplanation\nVideoSharingPlatform videoSharingPlatform = new VideoSharingPlatform();\nvideoSharingPlatform.remove(0);              // There is no video associated with videoId 0, so do nothing.\nvideoSharingPlatform.watch(0, 0, 1);         // There is no video associated with videoId 0, so return \"-1\".\nvideoSharingPlatform.like(0);                // There is no video associated with videoId 0, so do nothing.\nvideoSharingPlatform.dislike(0);             // There is no video associated with videoId 0, so do nothing.\nvideoSharingPlatform.getLikesAndDislikes(0); // There is no video associated with videoId 0, so return [-1].\nvideoSharingPlatform.getViews(0);            // There is no video associated with videoId 0, so return -1.\n\n\n \n\nConstraints:\n\n1 <= video.length <= 105\nThe sum of video.length over all calls to upload does not exceed 105\nvideo consists of digits.\n0 <= videoId <= 105\n0 <= startMinute < endMinute < 105\nstartMinute < video.length\nThe sum of endMinute - startMinute over all calls to watch does not exceed 105.\nAt most 105 calls in total will be made to all functions.","functionSig":"1\nclass VideoSharingPlatform {\n2\npublic:\n3\n    VideoSharingPlatform() {\n4\n        \n5\n    }\n6\n    \n7\n    int upload(string video) {\n8\n        \n9\n    }\n10\n    \n11\n    void remove(int videoId) {\n12\n        \n13\n    }\n14\n    \n15\n    string watch(int videoId, int startMinute, int endMinute) {\n16\n        \n17\n    }\n18\n    \n19\n    void like(int videoId) {\n20\n        \n21\n    }\n22\n    \n23\n    void dislike(int videoId) {\n24\n        \n25\n    }\n26\n    \n27\n    vector<int> getLikesAndDislikes(int videoId) {\n28\n        \n29\n    }\n30\n    \n31\n    int getViews(int videoId) {\n32\n        \n33\n    }\n34\n};\n35\n​\n36\n/**\n37\n * Your VideoSharingPlatform object will be instantiated and called as such:\n38\n * VideoSharingPlatform* obj = new VideoSharingPlatform();\n39\n * int param_1 = obj->upload(video);"}
