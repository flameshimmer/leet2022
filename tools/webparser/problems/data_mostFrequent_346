{"title":"484. Find Permutation","description":"A permutation perm of n integers of all the integers in the range [1, n] can be represented as a string s of length n - 1 where:\n\ns[i] == 'I' if perm[i] < perm[i + 1], and\ns[i] == 'D' if perm[i] > perm[i + 1].\n\nGiven a string s, reconstruct the lexicographically smallest permutation perm and return it.\n\n \n\nExample 1:\n\nInput: s = \"I\"\nOutput: [1,2]\nExplanation: [1,2] is the only legal permutation that can represented by s, where the number 1 and 2 construct an increasing relationship.\n\n\nExample 2:\n\nInput: s = \"DI\"\nOutput: [2,1,3]\nExplanation: Both [2,1,3] and [3,1,2] can be represented as \"DI\", but since we want to find the smallest lexicographical permutation, you should return [2,1,3]\n\n\n \n\nConstraints:\n\n1 <= s.length <= 105\ns[i] is either 'I' or 'D'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> findPermutation(string s) {\n4\n        \n5\n    }\n6\n};"}
