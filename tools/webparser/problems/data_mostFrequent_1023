{"title":"1063. Number of Valid Subarrays","description":"Given an integer array nums, return the number of non-empty subarrays with the leftmost element of the subarray not larger than other elements in the subarray.\n\nA subarray is a contiguous part of an array.\n\n \n\nExample 1:\n\nInput: nums = [1,4,2,5,3]\nOutput: 11\nExplanation: There are 11 valid subarrays: [1],[4],[2],[5],[3],[1,4],[2,5],[1,4,2],[2,5,3],[1,4,2,5],[1,4,2,5,3].\n\n\nExample 2:\n\nInput: nums = [3,2,1]\nOutput: 3\nExplanation: The 3 valid subarrays are: [3],[2],[1].\n\n\nExample 3:\n\nInput: nums = [2,2,2]\nOutput: 6\nExplanation: There are 6 valid subarrays: [2],[2],[2],[2,2],[2,2],[2,2,2].\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i] <= 105","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int validSubarrays(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
