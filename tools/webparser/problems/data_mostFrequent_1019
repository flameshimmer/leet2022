{"title":"972. Equal Rational Numbers","description":"Given two strings s and t, each of which represents a non-negative rational number, return true if and only if they represent the same number. The strings may use parentheses to denote the repeating part of the rational number.\n\nA rational number can be represented using up to three parts: <IntegerPart>, <NonRepeatingPart>, and a <RepeatingPart>. The number will be represented in one of the following three ways:\n\n<IntegerPart>\nFor example, 12, 0, and 123.\n<IntegerPart><.><NonRepeatingPart>\nFor example, 0.5, 1., 2.12, and 123.0001.\n<IntegerPart><.><NonRepeatingPart><(><RepeatingPart><)>\nFor example, 0.1(6), 1.(9), 123.00(1212).\n\nThe repeating portion of a decimal expansion is conventionally denoted within a pair of round brackets. For example:\n\n1/6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66).\n\n \n\nExample 1:\n\nInput: s = \"0.(52)\", t = \"0.5(25)\"\nOutput: true\nExplanation: Because \"0.(52)\" represents 0.52525252..., and \"0.5(25)\" represents 0.52525252525..... , the strings represent the same number.\n\n\nExample 2:\n\nInput: s = \"0.1666(6)\", t = \"0.166(66)\"\nOutput: true\n\n\nExample 3:\n\nInput: s = \"0.9(9)\", t = \"1.\"\nOutput: true\nExplanation: \"0.9(9)\" represents 0.999999999... repeated forever, which equals 1.  [See this link for an explanation.]\n\"1.\" represents the number 1, which is formed correctly: (IntegerPart) = \"1\" and (NonRepeatingPart) = \"\".\n\n\n \n\nConstraints:\n\nEach part consists only of digits.\nThe <IntegerPart> does not have leading zeros (except for the zero itself).\n1 <= <IntegerPart>.length <= 4\n0 <= <NonRepeatingPart>.length <= 4\n1 <= <RepeatingPart>.length <= 4","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool isRationalEqual(string s, string t) {\n4\n        \n5\n    }\n6\n};"}
