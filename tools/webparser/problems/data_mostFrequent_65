{"title":"921. Minimum Add to Make Parentheses Valid","description":"A parentheses string is valid if and only if:\n\nIt is the empty string,\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\n\nYou are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.\n\nFor example, if s = \"()))\", you can insert an opening parenthesis to be \"(()))\" or a closing parenthesis to be \"())))\".\n\nReturn the minimum number of moves required to make s valid.\n\n \n\nExample 1:\n\nInput: s = \"())\"\nOutput: 1\n\n\nExample 2:\n\nInput: s = \"(((\"\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns[i] is either '(' or ')'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minAddToMakeValid(string s) {\n4\n        \n5\n    }\n6\n};"}
