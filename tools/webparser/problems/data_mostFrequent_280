{"title":"1245. Tree Diameter","description":"The diameter of a tree is the number of edges in the longest path in that tree.\n\nThere is an undirected tree of n nodes labeled from 0 to n - 1. You are given a 2D array edges where edges.length == n - 1 and edges[i] = [ai, bi] indicates that there is an undirected edge between nodes ai and bi in the tree.\n\nReturn the diameter of the tree.\n\n \n\nExample 1:\n\nInput: edges = [[0,1],[0,2]]\nOutput: 2\nExplanation: The longest path of the tree is the path 1 - 0 - 2.\n\n\nExample 2:\n\nInput: edges = [[0,1],[1,2],[2,3],[1,4],[4,5]]\nOutput: 4\nExplanation: The longest path of the tree is the path 3 - 2 - 1 - 4 - 5.\n\n\n \n\nConstraints:\n\nn == edges.length + 1\n1 <= n <= 104\n0 <= ai, bi < n\nai != bi","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int treeDiameter(vector<vector<int>>& edges) {\n4\n        \n5\n    }\n6\n};"}
