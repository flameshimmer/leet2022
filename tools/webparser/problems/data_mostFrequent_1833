{"title":"2098. Subsequence of Size K With the Largest Even Sum","description":"You are given an integer array nums and an integer k. Find the largest even sum of any subsequence of nums that has a length of k.\n\nReturn this sum, or -1 if such a sum does not exist.\n\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n \n\nExample 1:\n\nInput: nums = [4,1,5,3,1], k = 3\nOutput: 12\nExplanation:\nThe subsequence with the largest possible even sum is [4,5,3]. It has a sum of 4 + 5 + 3 = 12.\n\n\nExample 2:\n\nInput: nums = [4,6,2], k = 3\nOutput: 12\nExplanation:\nThe subsequence with the largest possible even sum is [4,6,2]. It has a sum of 4 + 6 + 2 = 12.\n\n\nExample 3:\n\nInput: nums = [1,3,5], k = 1\nOutput: -1\nExplanation:\nNo subsequence of nums with length 1 has an even sum.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\n0 <= nums[i] <= 105\n1 <= k <= nums.length","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    long long largestEvenSum(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
