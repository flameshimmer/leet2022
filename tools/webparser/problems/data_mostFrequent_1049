{"title":"1273. Delete Tree Nodes","description":"A tree rooted at node 0 is given as follows:\n\nThe number of nodes is nodes;\nThe value of the ith node is value[i];\nThe parent of the ith node is parent[i].\n\nRemove every subtree whose sum of values of nodes is zero.\n\nReturn the number of the remaining nodes in the tree.\n\n \n\nExample 1:\n\nInput: nodes = 7, parent = [-1,0,0,1,2,2,2], value = [1,-2,4,0,-2,-1,-1]\nOutput: 2\n\n\nExample 2:\n\nInput: nodes = 7, parent = [-1,0,0,1,2,2,2], value = [1,-2,4,0,-2,-1,-2]\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= nodes <= 104\nparent.length == nodes\n0 <= parent[i] <= nodes - 1\nparent[0] == -1 which indicates that 0 is the root.\nvalue.length == nodes\n-105 <= value[i] <= 105\nThe given input is guaranteed to represent a valid tree.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int deleteTreeNodes(int nodes, vector<int>& parent, vector<int>& value) {\n4\n        \n5\n    }\n6\n};"}
