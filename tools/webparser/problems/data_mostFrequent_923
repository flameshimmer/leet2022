{"title":"1059. All Paths from Source Lead to Destination","description":"Given the edges of a directed graph where edges[i] = [ai, bi] indicates there is an edge between nodes ai and bi, and two nodes source and destination of this graph, determine whether or not all paths starting from source eventually, end at destination, that is:\n\nAt least one path exists from the source node to the destination node\nIf a path exists from the source node to a node with no outgoing edges, then that node is equal to destination.\nThe number of possible paths from source to destination is a finite number.\n\nReturn true if and only if all roads from source lead to destination.\n\n \n\nExample 1:\n\nInput: n = 3, edges = [[0,1],[0,2]], source = 0, destination = 2\nOutput: false\nExplanation: It is possible to reach and get stuck on both node 1 and node 2.\n\n\nExample 2:\n\nInput: n = 4, edges = [[0,1],[0,3],[1,2],[2,1]], source = 0, destination = 3\nOutput: false\nExplanation: We have two possibilities: to end at node 3, or to loop over node 1 and node 2 indefinitely.\n\n\nExample 3:\n\nInput: n = 4, edges = [[0,1],[0,2],[1,3],[2,3]], source = 0, destination = 3\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= n <= 104\n0 <= edges.length <= 104\nedges.length == 2\n0 <= ai, bi <= n - 1\n0 <= source <= n - 1\n0 <= destination <= n - 1\nThe given graph may have self-loops and parallel edges.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool leadsToDestination(int n, vector<vector<int>>& edges, int source, int destination) {\n4\n        \n5\n    }\n6\n};"}
