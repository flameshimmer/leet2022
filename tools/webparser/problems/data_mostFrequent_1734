{"title":"47. Permutations II","description":"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\n\n \n\nExample 1:\n\nInput: nums = [1,1,2]\nOutput:\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n\n\nExample 2:\n\nInput: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 8\n-10 <= nums[i] <= 10","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<vector<int>> permuteUnique(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
