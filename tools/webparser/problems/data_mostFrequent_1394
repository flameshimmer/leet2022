{"title":"221. Maximal Square","description":"Given an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.\n\n \n\nExample 1:\n\nInput: matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\nOutput: 4\n\n\nExample 2:\n\nInput: matrix = [[\"0\",\"1\"],[\"1\",\"0\"]]\nOutput: 1\n\n\nExample 3:\n\nInput: matrix = [[\"0\"]]\nOutput: 0\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 300\nmatrix[i][j] is '0' or '1'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int maximalSquare(vector<vector<char>>& matrix) {\n4\n        \n5\n    }\n6\n};"}
