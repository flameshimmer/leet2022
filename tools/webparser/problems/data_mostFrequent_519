{"title":"1787. Make the XOR of All Segments Equal to Zero","description":"You are given an array nums​​​ and an integer k​​​​​. The XOR of a segment [left, right] where left <= right is the XOR of all the elements with indices between left and right, inclusive: nums[left] XOR nums[left+1] XOR ... XOR nums[right].\n\nReturn the minimum number of elements to change in the array such that the XOR of all segments of size k​​​​​​ is equal to zero.\n\n \n\nExample 1:\n\nInput: nums = [1,2,0,3,0], k = 1\nOutput: 3\nExplanation: Modify the array from [1,2,0,3,0] to from [0,0,0,0,0].\n\n\nExample 2:\n\nInput: nums = [3,4,5,2,1,7,3,4,7], k = 3\nOutput: 3\nExplanation: Modify the array from [3,4,5,2,1,7,3,4,7] to [3,4,7,3,4,7,3,4,7].\n\n\nExample 3:\n\nInput: nums = [1,2,4,1,2,5,1,2,6], k = 3\nOutput: 3\nExplanation: Modify the array from [1,2,4,1,2,5,1,2,6] to [1,2,3,1,2,3,1,2,3].\n\n \n\nConstraints:\n\n1 <= k <= nums.length <= 2000\n​​​​​​0 <= nums[i] < 210","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minChanges(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
