{"title":"1698. Number of Distinct Substrings in a String","description":"Given a string s, return the number of distinct substrings of s.\n\nA substring of a string is obtained by deleting any number of characters (possibly zero) from the front of the string and any number (possibly zero) from the back of the string.\n\n \n\nExample 1:\n\nInput: s = \"aabbaba\"\nOutput: 21\nExplanation: The set of distinct strings is [\"a\",\"b\",\"aa\",\"bb\",\"ab\",\"ba\",\"aab\",\"abb\",\"bab\",\"bba\",\"aba\",\"aabb\",\"abba\",\"bbab\",\"baba\",\"aabba\",\"abbab\",\"bbaba\",\"aabbab\",\"abbaba\",\"aabbaba\"]\n\n\nExample 2:\n\nInput: s = \"abcdefg\"\nOutput: 28\n\n\n \n\nConstraints:\n\n1 <= s.length <= 500\ns consists of lowercase English letters.\n\n \n\nFollow up: Can you solve this problem in O(n) time complexity?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int countDistinct(string s) {\n4\n        \n5\n    }\n6\n};"}
