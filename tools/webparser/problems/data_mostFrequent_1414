{"title":"286. Walls and Gates","description":"You are given an m x n grid rooms initialized with these three possible values.\n\n-1 A wall or an obstacle.\n0 A gate.\nINF Infinity means an empty room. We use the value 231 - 1 = 2147483647 to represent INF as you may assume that the distance to a gate is less than 2147483647.\n\nFill each empty room with the distance to its nearest gate. If it is impossible to reach a gate, it should be filled with INF.\n\n \n\nExample 1:\n\nInput: rooms = [[2147483647,-1,0,2147483647],[2147483647,2147483647,2147483647,-1],[2147483647,-1,2147483647,-1],[0,-1,2147483647,2147483647]]\nOutput: [[3,-1,0,1],[2,2,1,-1],[1,-1,2,-1],[0,-1,3,4]]\n\n\nExample 2:\n\nInput: rooms = [[-1]]\nOutput: [[-1]]\n\n\n \n\nConstraints:\n\nm == rooms.length\nn == rooms[i].length\n1 <= m, n <= 250\nrooms[i][j] is -1, 0, or 231 - 1.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    void wallsAndGates(vector<vector<int>>& rooms) {\n4\n        \n5\n    }\n6\n};"}
