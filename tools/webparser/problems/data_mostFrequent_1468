{"title":"453. Minimum Moves to Equal Array Elements","description":"Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal.\n\nIn one move, you can increment n - 1 elements of the array by 1.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3]\nOutput: 3\nExplanation: Only three moves are needed (remember each move increments two elements):\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\n\n\nExample 2:\n\nInput: nums = [1,1,1]\nOutput: 0\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= nums.length <= 105\n-109 <= nums[i] <= 109\nThe answer is guaranteed to fit in a 32-bit integer.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minMoves(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
