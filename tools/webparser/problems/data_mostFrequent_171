{"title":"1099. Two Sum Less Than K","description":"Given an array nums of integers and integer k, return the maximum sum such that there exists i < j with nums[i] + nums[j] = sum and sum < k. If no i, j exist satisfying this equation, return -1.\n\n \n\nExample 1:\n\nInput: nums = [34,23,1,24,75,33,54,8], k = 60\nOutput: 58\nExplanation: We can use 34 and 24 to sum 58 which is less than 60.\n\n\nExample 2:\n\nInput: nums = [10,20,30], k = 15\nOutput: -1\nExplanation: In this case it is not possible to get a pair sum less that 15.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n1 <= nums[i] <= 1000\n1 <= k <= 2000","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int twoSumLessThanK(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
