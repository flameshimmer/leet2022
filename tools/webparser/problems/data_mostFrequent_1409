{"title":"402. Remove K Digits","description":"Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.\n\n \n\nExample 1:\n\nInput: num = \"1432219\", k = 3\nOutput: \"1219\"\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n\n\nExample 2:\n\nInput: num = \"10200\", k = 1\nOutput: \"200\"\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n\n\nExample 3:\n\nInput: num = \"10\", k = 2\nOutput: \"0\"\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.\n\n\n \n\nConstraints:\n\n1 <= k <= num.length <= 105\nnum consists of only digits.\nnum does not have any leading zeros except for the zero itself.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string removeKdigits(string num, int k) {\n4\n        \n5\n    }\n6\n};"}
