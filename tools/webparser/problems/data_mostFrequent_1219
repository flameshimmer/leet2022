{"title":"1538. Guess the Majority in a Hidden Array","description":"We have an integer array nums, where all the integers in nums are 0 or 1. You will not be given direct access to the array, instead, you will have an API ArrayReader which have the following functions:\n\nint query(int a, int b, int c, int d): where 0 <= a < b < c < d < ArrayReader.length(). The function returns the distribution of the value of the 4 elements and returns:\n4 : if the values of the 4 elements are the same (0 or 1).\n2 : if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n0 : if two element have a value equal to 0 and two elements have a value equal to 1.\nint length(): Returns the size of the array.\n\nYou are allowed to call query() 2 * n times at most where n is equal to ArrayReader.length().\n\nReturn any index of the most frequent value in nums, in case of tie, return -1.\n\n \n\nExample 1:\n\nInput: nums = [0,0,1,0,1,1,1,1]\nOutput: 5\nExplanation: The following calls to the API\nreader.length() // returns 8 because there are 8 elements in the hidden array.\nreader.query(0,1,2,3) // returns 2 this is a query that compares the elements nums[0], nums[1], nums[2], nums[3]\n// Three elements have a value equal to 0 and one element has value equal to 1 or viceversa.\nreader.query(4,5,6,7) // returns 4 because nums[4], nums[5], nums[6], nums[7] have the same value.\nwe can infer that the most frequent value is found in the last 4 elements.\nIndex 2, 4, 6, 7 is also a correct answer.\n\n\nExample 2:\n\nInput: nums = [0,0,1,1,0]\nOutput: 0\n\n\nExample 3:\n\nInput: nums = [1,0,1,0,1,0,1,0]\nOutput: -1\n\n\n \n\nConstraints:\n\n5 <= nums.length <= 105\n0 <= nums[i] <= 1\n\n \n\nFollow up: What is the minimum number of calls needed to find the majority element?","functionSig":"1\n/**\n2\n * // This is the ArrayReader's API interface.\n3\n * // You should not implement it, or speculate about its implementation\n4\n * class ArrayReader {\n5\n *   public:\n6\n *     // Compares 4 different elements in the array\n7\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n8\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n9\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n10\n *     int query(int a, int b, int c, int d);\n11\n *\n12\n *     // Returns the length of the array\n13\n *     int length();\n14\n * };\n15\n */\n16\n​\n17\nclass Solution {\n18\npublic:\n19\n    int guessMajority(ArrayReader &reader) {\n20\n        \n21\n    }\n22\n};"}
