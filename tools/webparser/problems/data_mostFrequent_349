{"title":"870. Advantage Shuffle","description":"You are given two integer arrays nums1 and nums2 both of the same length. The advantage of nums1 with respect to nums2 is the number of indices i for which nums1[i] > nums2[i].\n\nReturn any permutation of nums1 that maximizes its advantage with respect to nums2.\n\n \n\nExample 1:\n\nInput: nums1 = [2,7,11,15], nums2 = [1,10,4,11]\nOutput: [2,11,7,15]\n\n\nExample 2:\n\nInput: nums1 = [12,24,8,32], nums2 = [13,25,32,11]\nOutput: [24,32,8,12]\n\n\n \n\nConstraints:\n\n1 <= nums1.length <= 105\nnums2.length == nums1.length\n0 <= nums1[i], nums2[i] <= 109","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> advantageCount(vector<int>& nums1, vector<int>& nums2) {\n4\n        \n5\n    }\n6\n};"}
