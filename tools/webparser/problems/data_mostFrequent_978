{"title":"548. Split Array with Equal Sum","description":"Given an integer array nums of length n, return true if there is a triplet (i, j, k) which satisfies the following conditions:\n\n0 < i, i + 1 < j, j + 1 < k < n - 1\nThe sum of subarrays (0, i - 1), (i + 1, j - 1), (j + 1, k - 1) and (k + 1, n - 1) is equal.\nA subarray (l, r) represents a slice of the original array starting from the element indexed l to the element indexed r.\n\n \n\nExample 1:\n\nInput: nums = [1,2,1,2,1,2,1]\nOutput: true\nExplanation:\ni = 1, j = 3, k = 5. \nsum(0, i - 1) = sum(0, 0) = 1\nsum(i + 1, j - 1) = sum(2, 2) = 1\nsum(j + 1, k - 1) = sum(4, 4) = 1\nsum(k + 1, n - 1) = sum(6, 6) = 1\n\n\nExample 2:\n\nInput: nums = [1,2,1,2,1,2,1,2]\nOutput: false\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 2000\n-106 <= nums[i] <= 106","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool splitArray(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
