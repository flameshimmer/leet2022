{"title":"1437. Check If All 1's Are at Least Length K Places Away","description":"Given an binary array nums and an integer k, return true if all 1's are at least k places away from each other, otherwise return false.\n\n \n\nExample 1:\n\nInput: nums = [1,0,0,0,1,0,0,1], k = 2\nOutput: true\nExplanation: Each of the 1s are at least 2 places away from each other.\n\n\nExample 2:\n\nInput: nums = [1,0,0,1,0,1], k = 2\nOutput: false\nExplanation: The second 1 and third 1 are only one apart from each other.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\n0 <= k <= nums.length\nnums[i] is 0 or 1","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool kLengthApart(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
