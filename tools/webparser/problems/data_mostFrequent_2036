{"title":"1740. Find Distance in a Binary Tree","description":"Given the root of a binary tree and two integers p and q, return the distance between the nodes of value p and value q in the tree.\n\nThe distance between two nodes is the number of edges on the path from one to the other.\n\n \n\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 0\nOutput: 3\nExplanation: There are 3 edges between 5 and 0: 5-3-1-0.\n\nExample 2:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 7\nOutput: 2\nExplanation: There are 2 edges between 5 and 7: 5-2-7.\n\nExample 3:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 5\nOutput: 0\nExplanation: The distance between a node and itself is 0.\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n0 <= Node.val <= 109\nAll Node.val are unique.\np and q are values in the tree.","functionSig":"1\n/**\n2\n * Definition for a binary tree node.\n3\n * struct TreeNode {\n4\n *     int val;\n5\n *     TreeNode *left;\n6\n *     TreeNode *right;\n7\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n8\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n9\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n10\n * };\n11\n */\n12\nclass Solution {\n13\npublic:\n14\n    int findDistance(TreeNode* root, int p, int q) {\n15\n        \n16\n    }\n17\n};"}
