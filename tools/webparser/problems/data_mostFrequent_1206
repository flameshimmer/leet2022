{"title":"1469. Find All The Lonely Nodes","description":"In a binary tree, a lonely node is a node that is the only child of its parent node. The root of the tree is not lonely because it does not have a parent node.\n\nGiven the root of a binary tree, return an array containing the values of all lonely nodes in the tree. Return the list in any order.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,null,4]\nOutput: [4]\nExplanation: Light blue node is the only lonely node.\nNode 1 is the root and is not lonely.\nNodes 2 and 3 have the same parent and are not lonely.\n\n\nExample 2:\n\nInput: root = [7,1,4,6,null,5,3,null,null,null,null,null,2]\nOutput: [6,2]\nExplanation: Light blue nodes are lonely nodes.\nPlease remember that order doesn't matter, [2,6] is also an acceptable answer.\n\n\nExample 3:\n\n\nInput: root = [11,99,88,77,null,null,66,55,null,null,44,33,null,null,22]\nOutput: [77,55,33,66,44,22]\nExplanation: Nodes 99 and 88 share the same parent. Node 11 is the root.\nAll other nodes are lonely.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 1000].\n1 <= Node.val <= 106","functionSig":"1\n/**\n2\n * Definition for a binary tree node.\n3\n * struct TreeNode {\n4\n *     int val;\n5\n *     TreeNode *left;\n6\n *     TreeNode *right;\n7\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n8\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n9\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n10\n * };\n11\n */\n12\nclass Solution {\n13\npublic:\n14\n    vector<int> getLonelyNodes(TreeNode* root) {\n15\n        \n16\n    }\n17\n};"}
