{"title":"1138. Alphabet Board Path","description":"On an alphabet board, we start at position (0, 0), corresponding to character board[0][0].\n\nHere, board = [\"abcde\", \"fghij\", \"klmno\", \"pqrst\", \"uvwxy\", \"z\"], as shown in the diagram below.\n\nWe may make the following moves:\n\n'U' moves our position up one row, if the position exists on the board;\n'D' moves our position down one row, if the position exists on the board;\n'L' moves our position left one column, if the position exists on the board;\n'R' moves our position right one column, if the position exists on the board;\n'!' adds the character board[r][c] at our current position (r, c) to the answer.\n\n(Here, the only positions that exist on the board are positions with letters on them.)\n\nReturn a sequence of moves that makes our answer equal to target in the minimum number of moves.  You may return any path that does so.\n\n \n\nExample 1:\n\nInput: target = \"leet\"\nOutput: \"DDR!UURRR!!DDD!\"\n\n\nExample 2:\n\nInput: target = \"code\"\nOutput: \"RR!DDRR!UUL!R!\"\n\n\n \n\nConstraints:\n\n1 <= target.length <= 100\ntarget consists only of English lowercase letters.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string alphabetBoardPath(string target) {\n4\n        \n5\n    }\n6\n};"}
