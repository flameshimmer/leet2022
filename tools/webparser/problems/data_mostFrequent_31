{"title":"15. 3Sum","description":"Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.\n\nNotice that the solution set must not contain duplicate triplets.\n\n \n\nExample 1:\n\nInput: nums = [-1,0,1,2,-1,-4]\nOutput: [[-1,-1,2],[-1,0,1]]\n\n\nExample 2:\n\nInput: nums = []\nOutput: []\n\n\nExample 3:\n\nInput: nums = [0]\nOutput: []\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 3000\n-105 <= nums[i] <= 105","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<vector<int>> threeSum(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
