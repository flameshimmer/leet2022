{"title":"1087. Brace Expansion","description":"You are given a string s representing a list of words. Each letter in the word has one or more options.\n\nIf there is one option, the letter is represented as is.\nIf there is more than one option, then curly braces delimit the options. For example, \"{a,b,c}\" represents options [\"a\", \"b\", \"c\"].\n\nFor example, if s = \"a{b,c}\", the first character is always 'a', but the second character can be 'b' or 'c'. The original list is [\"ab\", \"ac\"].\n\nReturn all words that can be formed in this manner, sorted in lexicographical order.\n\n \n\nExample 1:\n\nInput: s = \"{a,b}c{d,e}f\"\nOutput: [\"acdf\",\"acef\",\"bcdf\",\"bcef\"]\n\n\nExample 2:\n\nInput: s = \"abcd\"\nOutput: [\"abcd\"]\n\n\n \n\nConstraints:\n\n1 <= s.length <= 50\ns consists of curly brackets '{}', commas ',', and lowercase English letters.\ns is guaranteed to be a valid input.\nThere are no nested curly brackets.\nAll characters inside a pair of consecutive opening and ending curly brackets are different.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<string> expand(string s) {\n4\n        \n5\n    }\n6\n};"}
