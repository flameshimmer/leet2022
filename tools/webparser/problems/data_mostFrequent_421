{"title":"1669. Merge In Between Linked Lists","description":"You are given two linked lists: list1 and list2 of sizes n and m respectively.\n\nRemove list1's nodes from the ath node to the bth node, and put list2 in their place.\n\nThe blue edges and nodes in the following figure indicate the result:\n\nBuild the result list and return its head.\n\n \n\nExample 1:\n\nInput: list1 = [0,1,2,3,4,5], a = 3, b = 4, list2 = [1000000,1000001,1000002]\nOutput: [0,1,2,1000000,1000001,1000002,5]\nExplanation: We remove the nodes 3 and 4 and put the entire list2 in their place. The blue edges and nodes in the above figure indicate the result.\n\n\nExample 2:\n\nInput: list1 = [0,1,2,3,4,5,6], a = 2, b = 5, list2 = [1000000,1000001,1000002,1000003,1000004]\nOutput: [0,1,1000000,1000001,1000002,1000003,1000004,6]\nExplanation: The blue edges and nodes in the above figure indicate the result.\n\n\n \n\nConstraints:\n\n3 <= list1.length <= 104\n1 <= a <= b < list1.length - 1\n1 <= list2.length <= 104","functionSig":"1\n/**\n2\n * Definition for singly-linked list.\n3\n * struct ListNode {\n4\n *     int val;\n5\n *     ListNode *next;\n6\n *     ListNode() : val(0), next(nullptr) {}\n7\n *     ListNode(int x) : val(x), next(nullptr) {}\n8\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n9\n * };\n10\n */\n11\nclass Solution {\n12\npublic:\n13\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n14\n        \n15\n    }\n16\n};"}
