{"title":"531. Lonely Pixel I","description":"Given an m x n picture consisting of black 'B' and white 'W' pixels, return the number of black lonely pixels.\n\nA black lonely pixel is a character 'B' that located at a specific position where the same row and same column don't have any other black pixels.\n\n \n\nExample 1:\n\nInput: picture = [[\"W\",\"W\",\"B\"],[\"W\",\"B\",\"W\"],[\"B\",\"W\",\"W\"]]\nOutput: 3\nExplanation: All the three 'B's are black lonely pixels.\n\n\nExample 2:\n\nInput: picture = [[\"B\",\"B\",\"B\"],[\"B\",\"B\",\"W\"],[\"B\",\"B\",\"B\"]]\nOutput: 0\n\n\n \n\nConstraints:\n\nm == picture.length\nn == picture[i].length\n1 <= m, n <= 500\npicture[i][j] is 'W' or 'B'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int findLonelyPixel(vector<vector<char>>& picture) {\n4\n        \n5\n    }\n6\n};"}
