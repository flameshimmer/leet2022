{"title":"265. Paint House II","description":"There are a row of n houses, each house can be painted with one of the k colors. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.\n\nThe cost of painting each house with a certain color is represented by an n x k cost matrix costs.\n\nFor example, costs[0][0] is the cost of painting house 0 with color 0; costs[1][2] is the cost of painting house 1 with color 2, and so on...\n\nReturn the minimum cost to paint all houses.\n\n \n\nExample 1:\n\nInput: costs = [[1,5,3],[2,9,4]]\nOutput: 5\nExplanation:\nPaint house 0 into color 0, paint house 1 into color 2. Minimum cost: 1 + 4 = 5; \nOr paint house 0 into color 2, paint house 1 into color 0. Minimum cost: 3 + 2 = 5.\n\n\nExample 2:\n\nInput: costs = [[1,3],[2,4]]\nOutput: 5\n\n\n \n\nConstraints:\n\ncosts.length == n\ncosts[i].length == k\n1 <= n <= 100\n2 <= k <= 20\n1 <= costs[i][j] <= 20\n\n \n\nFollow up: Could you solve it in O(nk) runtime?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minCostII(vector<vector<int>>& costs) {\n4\n        \n5\n    }\n6\n};"}
