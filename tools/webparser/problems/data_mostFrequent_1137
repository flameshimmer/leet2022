{"title":"287. Find the Duplicate Number","description":"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.\n\nThere is only one repeated number in nums, return this repeated number.\n\nYou must solve the problem without modifying the array nums and uses only constant extra space.\n\n \n\nExample 1:\n\nInput: nums = [1,3,4,2,2]\nOutput: 2\n\n\nExample 2:\n\nInput: nums = [3,1,3,4,2]\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= n <= 105\nnums.length == n + 1\n1 <= nums[i] <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times.\n\n \n\nFollow up:\n\nHow can we prove that at least one duplicate number must exist in nums?\nCan you solve the problem in linear runtime complexity?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int findDuplicate(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
