{"title":"1305. All Elements in Two Binary Search Trees","description":"Given two binary search trees root1 and root2, return a list containing all the integers from both trees sorted in ascending order.\n\n \n\nExample 1:\n\nInput: root1 = [2,1,4], root2 = [1,0,3]\nOutput: [0,1,1,2,3,4]\n\n\nExample 2:\n\nInput: root1 = [1,null,8], root2 = [8,1]\nOutput: [1,1,8,8]\n\n\n \n\nConstraints:\n\nThe number of nodes in each tree is in the range [0, 5000].\n-105 <= Node.val <= 105","functionSig":"1\n/**\n2\n * Definition for a binary tree node.\n3\n * struct TreeNode {\n4\n *     int val;\n5\n *     TreeNode *left;\n6\n *     TreeNode *right;\n7\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n8\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n9\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n10\n * };\n11\n */\n12\nclass Solution {\n13\npublic:\n14\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n15\n        \n16\n    }\n17\n};"}
