{"title":"1653. Minimum Deletions to Make String Balanced","description":"You are given a string s consisting only of characters 'a' and 'b'​​​​.\n\nYou can delete any number of characters in s to make s balanced. s is balanced if there is no pair of indices (i,j) such that i < j and s[i] = 'b' and s[j]= 'a'.\n\nReturn the minimum number of deletions needed to make s balanced.\n\n \n\nExample 1:\n\nInput: s = \"aababbab\"\nOutput: 2\nExplanation: You can either:\nDelete the characters at 0-indexed positions 2 and 6 (\"aababbab\" -> \"aaabbb\"), or\nDelete the characters at 0-indexed positions 3 and 6 (\"aababbab\" -> \"aabbbb\").\n\n\nExample 2:\n\nInput: s = \"bbaaaaabb\"\nOutput: 2\nExplanation: The only solution is to delete the first two characters.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 105\ns[i] is 'a' or 'b'​​.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minimumDeletions(string s) {\n4\n        \n5\n    }\n6\n};"}
