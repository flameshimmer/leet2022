{"title":"34. Find First and Last Position of Element in Sorted Array","description":"Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.\n\nIf target is not found in the array, return [-1, -1].\n\nYou must write an algorithm with O(log n) runtime complexity.\n\n \n\nExample 1:\n\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n\n\nExample 2:\n\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n\n\nExample 3:\n\nInput: nums = [], target = 0\nOutput: [-1,-1]\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 105\n-109 <= nums[i] <= 109\nnums is a non-decreasing array.\n-109 <= target <= 109","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> searchRange(vector<int>& nums, int target) {\n4\n        \n5\n    }\n6\n};"}
