{"title":"169. Majority Element","description":"Given an array nums of size n, return the majority element.\n\nThe majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.\n\n \n\nExample 1:\n\nInput: nums = [3,2,3]\nOutput: 3\n\n\nExample 2:\n\nInput: nums = [2,2,1,1,1,2,2]\nOutput: 2\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 5 * 104\n-109 <= nums[i] <= 109\n\n \n\nFollow-up: Could you solve the problem in linear time and in O(1) space?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int majorityElement(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
