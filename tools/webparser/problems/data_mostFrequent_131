{"title":"1864. Minimum Number of Swaps to Make the Binary String Alternating","description":"Given a binary string s, return the minimum number of character swaps to make it alternating, or -1 if it is impossible.\n\nThe string is called alternating if no two adjacent characters are equal. For example, the strings \"010\" and \"1010\" are alternating, while the string \"0100\" is not.\n\nAny two characters may be swapped, even if they are not adjacent.\n\n \n\nExample 1:\n\nInput: s = \"111000\"\nOutput: 1\nExplanation: Swap positions 1 and 4: \"111000\" -> \"101010\"\nThe string is now alternating.\n\n\nExample 2:\n\nInput: s = \"010\"\nOutput: 0\nExplanation: The string is already alternating, no swaps are needed.\n\n\nExample 3:\n\nInput: s = \"1110\"\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns[i] is either '0' or '1'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int minSwaps(string s) {\n4\n        \n5\n    }\n6\n};"}
