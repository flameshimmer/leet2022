{"title":"261. Graph Valid Tree","description":"You have a graph of n nodes labeled from 0 to n - 1. You are given an integer n and a list of edges where edges[i] = [ai, bi] indicates that there is an undirected edge between nodes ai and bi in the graph.\n\nReturn true if the edges of the given graph make up a valid tree, and false otherwise.\n\n \n\nExample 1:\n\nInput: n = 5, edges = [[0,1],[0,2],[0,3],[1,4]]\nOutput: true\n\n\nExample 2:\n\nInput: n = 5, edges = [[0,1],[1,2],[2,3],[1,3],[1,4]]\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= n <= 2000\n0 <= edges.length <= 5000\nedges[i].length == 2\n0 <= ai, bi < n\nai != bi\nThere are no self-loops or repeated edges.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool validTree(int n, vector<vector<int>>& edges) {\n4\n        \n5\n    }\n6\n};"}
