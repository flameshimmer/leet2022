{"title":"2158. Amount of New Area Painted Each Day","description":"There is a long and thin painting that can be represented by a number line. You are given a 0-indexed 2D integer array paint of length n, where paint[i] = [starti, endi]. This means that on the ith day you need to paint the area between starti and endi.\n\nPainting the same area multiple times will create an uneven painting so you only want to paint each area of the painting at most once.\n\nReturn an integer array worklog of length n, where worklog[i] is the amount of new area that you painted on the ith day.\n\n \n\nExample 1:\n\nInput: paint = [[1,4],[4,7],[5,8]]\nOutput: [3,3,1]\nExplanation:\nOn day 0, paint everything between 1 and 4.\nThe amount of new area painted on day 0 is 4 - 1 = 3.\nOn day 1, paint everything between 4 and 7.\nThe amount of new area painted on day 1 is 7 - 4 = 3.\nOn day 2, paint everything between 7 and 8.\nEverything between 5 and 7 was already painted on day 1.\nThe amount of new area painted on day 2 is 8 - 7 = 1. \n\n\nExample 2:\n\nInput: paint = [[1,4],[5,8],[4,7]]\nOutput: [3,3,1]\nExplanation:\nOn day 0, paint everything between 1 and 4.\nThe amount of new area painted on day 0 is 4 - 1 = 3.\nOn day 1, paint everything between 5 and 8.\nThe amount of new area painted on day 1 is 8 - 5 = 3.\nOn day 2, paint everything between 4 and 5.\nEverything between 5 and 7 was already painted on day 1.\nThe amount of new area painted on day 2 is 5 - 4 = 1. \n\n\nExample 3:\n\nInput: paint = [[1,5],[2,4]]\nOutput: [4,0]\nExplanation:\nOn day 0, paint everything between 1 and 5.\nThe amount of new area painted on day 0 is 5 - 1 = 4.\nOn day 1, paint nothing because everything between 2 and 4 was already painted on day 0.\nThe amount of new area painted on day 1 is 0.\n\n\n \n\nConstraints:\n\n1 <= paint.length <= 105\npaint[i].length == 2\n0 <= starti < endi <= 5 * 104","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> amountPainted(vector<vector<int>>& paint) {\n4\n        \n5\n    }\n6\n};"}
