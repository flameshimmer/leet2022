{"title":"1004. Max Consecutive Ones III","description":"Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.\n\n \n\nExample 1:\n\nInput: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2\nOutput: 6\nExplanation: [1,1,1,0,0,1,1,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n\nExample 2:\n\nInput: nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3\nOutput: 10\nExplanation: [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\nnums[i] is either 0 or 1.\n0 <= k <= nums.length","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int longestOnes(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
