{"title":"1496. Path Crossing","description":"Given a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively. You start at the origin (0, 0) on a 2D plane and walk on the path specified by path.\n\nReturn true if the path crosses itself at any point, that is, if at any time you are on a location you have previously visited. Return false otherwise.\n\n \n\nExample 1:\n\nInput: path = \"NES\"\nOutput: false \nExplanation: Notice that the path doesn't cross any point more than once.\n\n\nExample 2:\n\nInput: path = \"NESWW\"\nOutput: true\nExplanation: Notice that the path visits the origin twice.\n\n \n\nConstraints:\n\n1 <= path.length <= 104\npath[i] is either 'N', 'S', 'E', or 'W'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool isPathCrossing(string path) {\n4\n        \n5\n    }\n6\n};"}
