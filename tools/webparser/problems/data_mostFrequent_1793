{"title":"291. Word Pattern II","description":"Given a pattern and a string s, return true if s matches the pattern.\n\nA string s matches a pattern if there is some bijective mapping of single characters to strings such that if each character in pattern is replaced by the string it maps to, then the resulting string is s. A bijective mapping means that no two characters map to the same string, and no character maps to two different strings.\n\n \n\nExample 1:\n\nInput: pattern = \"abab\", s = \"redblueredblue\"\nOutput: true\nExplanation: One possible mapping is as follows:\n'a' -> \"red\"\n'b' -> \"blue\"\n\nExample 2:\n\nInput: pattern = \"aaaa\", s = \"asdasdasdasd\"\nOutput: true\nExplanation: One possible mapping is as follows:\n'a' -> \"asd\"\n\n\nExample 3:\n\nInput: pattern = \"aabb\", s = \"xyzabcxzyabc\"\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= pattern.length, s.length <= 20\npattern and s consist of only lowercase English letters.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool wordPatternMatch(string pattern, string s) {\n4\n        \n5\n    }\n6\n};"}
