{"title":"1624. Largest Substring Between Two Equal Characters","description":"Given a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1.\n\nA substring is a contiguous sequence of characters within a string.\n\n \n\nExample 1:\n\nInput: s = \"aa\"\nOutput: 0\nExplanation: The optimal substring here is an empty substring between the two 'a's.\n\nExample 2:\n\nInput: s = \"abca\"\nOutput: 2\nExplanation: The optimal substring here is \"bc\".\n\n\nExample 3:\n\nInput: s = \"cbzxy\"\nOutput: -1\nExplanation: There are no characters that appear twice in s.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 300\ns contains only lowercase English letters.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int maxLengthBetweenEqualCharacters(string s) {\n4\n        \n5\n    }\n6\n};"}
