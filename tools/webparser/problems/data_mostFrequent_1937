{"title":"1190. Reverse Substrings Between Each Pair of Parentheses","description":"You are given a string s that consists of lower case English letters and brackets.\n\nReverse the strings in each pair of matching parentheses, starting from the innermost one.\n\nYour result should not contain any brackets.\n\n \n\nExample 1:\n\nInput: s = \"(abcd)\"\nOutput: \"dcba\"\n\n\nExample 2:\n\nInput: s = \"(u(love)i)\"\nOutput: \"iloveu\"\nExplanation: The substring \"love\" is reversed first, then the whole string is reversed.\n\n\nExample 3:\n\nInput: s = \"(ed(et(oc))el)\"\nOutput: \"leetcode\"\nExplanation: First, we reverse the substring \"oc\", then \"etco\", and finally, the whole string.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 2000\ns only contains lower case English characters and parentheses.\nIt is guaranteed that all parentheses are balanced.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string reverseParentheses(string s) {\n4\n        \n5\n    }\n6\n};"}
