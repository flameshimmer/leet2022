{"title":"308. Range Sum Query 2D - Mutable","description":"Given a 2D matrix matrix, handle multiple queries of the following types:\n\nUpdate the value of a cell in matrix.\nCalculate the sum of the elements of matrix inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\n\nImplement the NumMatrix class:\n\nNumMatrix(int[][] matrix) Initializes the object with the integer matrix matrix.\nvoid update(int row, int col, int val) Updates the value of matrix[row][col] to be val.\nint sumRegion(int row1, int col1, int row2, int col2) Returns the sum of the elements of matrix inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\n\n \n\nExample 1:\n\nInput\n[\"NumMatrix\", \"sumRegion\", \"update\", \"sumRegion\"]\n[[[[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]], [2, 1, 4, 3], [3, 2, 2], [2, 1, 4, 3]]\nOutput\n[null, 8, null, 10]\n\nExplanation\nNumMatrix numMatrix = new NumMatrix([[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]);\nnumMatrix.sumRegion(2, 1, 4, 3); // return 8 (i.e. sum of the left red rectangle)\nnumMatrix.update(3, 2, 2);       // matrix changes from left image to right image\nnumMatrix.sumRegion(2, 1, 4, 3); // return 10 (i.e. sum of the right red rectangle)\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 200\n-105 <= matrix[i][j] <= 105\n0 <= row < m\n0 <= col < n\n-105 <= val <= 105\n0 <= row1 <= row2 < m\n0 <= col1 <= col2 < n\nAt most 104 calls will be made to sumRegion and update.","functionSig":"1\nclass NumMatrix {\n2\npublic:\n3\n    NumMatrix(vector<vector<int>>& matrix) {\n4\n        \n5\n    }\n6\n    \n7\n    void update(int row, int col, int val) {\n8\n        \n9\n    }\n10\n    \n11\n    int sumRegion(int row1, int col1, int row2, int col2) {\n12\n        \n13\n    }\n14\n};\n15\n​\n16\n/**\n17\n * Your NumMatrix object will be instantiated and called as such:\n18\n * NumMatrix* obj = new NumMatrix(matrix);\n19\n * obj->update(row,col,val);\n20\n * int param_2 = obj->sumRegion(row1,col1,row2,col2);\n21\n */"}
