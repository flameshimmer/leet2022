{"title":"137. Single Number II","description":"Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.\n\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n\n \n\nExample 1:\n\nInput: nums = [2,2,3,2]\nOutput: 3\n\n\nExample 2:\n\nInput: nums = [0,1,0,1,0,1,99]\nOutput: 99\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-231 <= nums[i] <= 231 - 1\nEach element in nums appears exactly three times except for one element which appears once.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int singleNumber(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
