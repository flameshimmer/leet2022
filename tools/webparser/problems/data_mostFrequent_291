{"title":"1058. Minimize Rounding Error to Meet Target","description":"Given an array of prices [p1,p2...,pn] and a target, round each price pi to Roundi(pi) so that the rounded array [Round1(p1),Round2(p2)...,Roundn(pn)] sums to the given target. Each operation Roundi(pi) could be either Floor(pi) or Ceil(pi).\n\nReturn the string \"-1\" if the rounded array is impossible to sum to target. Otherwise, return the smallest rounding error, which is defined as Σ |Roundi(pi) - (pi)| for i from 1 to n, as a string with three places after the decimal.\n\n \n\nExample 1:\n\nInput: prices = [\"0.700\",\"2.800\",\"4.900\"], target = 8\nOutput: \"1.000\"\nExplanation:\nUse Floor, Ceil and Ceil operations to get (0.7 - 0) + (3 - 2.8) + (5 - 4.9) = 0.7 + 0.2 + 0.1 = 1.0 .\n\n\nExample 2:\n\nInput: prices = [\"1.500\",\"2.500\",\"3.500\"], target = 10\nOutput: \"-1\"\nExplanation: It is impossible to meet the target.\n\n\nExample 3:\n\nInput: prices = [\"1.500\",\"2.500\",\"3.500\"], target = 9\nOutput: \"1.500\"\n\n\n \n\nConstraints:\n\n1 <= prices.length <= 500\nEach string prices[i] represents a real number in the range [0.0, 1000.0] and has exactly 3 decimal places.\n0 <= target <= 106","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    string minimizeError(vector<string>& prices, int target) {\n4\n        \n5\n    }\n6\n};"}
