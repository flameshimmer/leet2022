{"title":"280. Wiggle Sort","description":"Given an integer array nums, reorder it such that nums[0] <= nums[1] >= nums[2] <= nums[3]....\n\nYou may assume the input array always has a valid answer.\n\n \n\nExample 1:\n\nInput: nums = [3,5,2,1,6,4]\nOutput: [3,5,1,6,2,4]\nExplanation: [1,6,2,5,3,4] is also accepted.\n\n\nExample 2:\n\nInput: nums = [6,6,5,6,3,8]\nOutput: [6,6,5,6,3,8]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i] <= 104\nIt is guaranteed that there will be an answer for the given input nums.\n\n \n\nFollow up: Could you solve the problem in O(n) time complexity?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    void wiggleSort(vector<int>& nums) {\n4\n        \n5\n    }\n6\n};"}
