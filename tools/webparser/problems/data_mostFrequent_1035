{"title":"1121. Divide Array Into Increasing Sequences","description":"Given an integer array nums sorted in non-decreasing order and an integer k, return true if this array can be divided into one or more disjoint increasing subsequences of length at least k, or false otherwise.\n\n \n\nExample 1:\n\nInput: nums = [1,2,2,3,3,4,4], k = 3\nOutput: true\nExplanation: The array can be divided into two subsequences [1,2,3,4] and [2,3,4] with lengths at least 3 each.\n\n\nExample 2:\n\nInput: nums = [5,6,6,7,8], k = 3\nOutput: false\nExplanation: There is no way to divide the array using the conditions required.\n\n\n \n\nConstraints:\n\n1 <= k <= nums.length <= 105\n1 <= nums[i] <= 105\nnums is sorted in non-decreasing order.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    bool canDivideIntoSubsequences(vector<int>& nums, int k) {\n4\n        \n5\n    }\n6\n};"}
