{"title":"1868. Product of Two Run-Length Encoded Arrays","description":"Run-length encoding is a compression algorithm that allows for an integer array nums with many segments of consecutive repeated numbers to be represented by a (generally smaller) 2D array encoded. Each encoded[i] = [vali, freqi] describes the ith segment of repeated numbers in nums where vali is the value that is repeated freqi times.\n\nFor example, nums = [1,1,1,2,2,2,2,2] is represented by the run-length encoded array encoded = [[1,3],[2,5]]. Another way to read this is \"three 1's followed by five 2's\".\n\nThe product of two run-length encoded arrays encoded1 and encoded2 can be calculated using the following steps:\n\nExpand both encoded1 and encoded2 into the full arrays nums1 and nums2 respectively.\nCreate a new array prodNums of length nums1.length and set prodNums[i] = nums1[i] * nums2[i].\nCompress prodNums into a run-length encoded array and return it.\n\nYou are given two run-length encoded arrays encoded1 and encoded2 representing full arrays nums1 and nums2 respectively. Both nums1 and nums2 have the same length. Each encoded1[i] = [vali, freqi] describes the ith segment of nums1, and each encoded2[j] = [valj, freqj] describes the jth segment of nums2.\n\nReturn the product of encoded1 and encoded2.\n\nNote: Compression should be done such that the run-length encoded array has the minimum possible length.\n\n \n\nExample 1:\n\nInput: encoded1 = [[1,3],[2,3]], encoded2 = [[6,3],[3,3]]\nOutput: [[6,6]]\nExplanation: encoded1 expands to [1,1,1,2,2,2] and encoded2 expands to [6,6,6,3,3,3].\nprodNums = [6,6,6,6,6,6], which is compressed into the run-length encoded array [[6,6]].\n\n\nExample 2:\n\nInput: encoded1 = [[1,3],[2,1],[3,2]], encoded2 = [[2,3],[3,3]]\nOutput: [[2,3],[6,1],[9,2]]\nExplanation: encoded1 expands to [1,1,1,2,3,3] and encoded2 expands to [2,2,2,3,3,3].\nprodNums = [2,2,2,6,9,9], which is compressed into the run-length encoded array [[2,3],[6,1],[9,2]].\n\n\n \n\nConstraints:\n\n1 <= encoded1.length, encoded2.length <= 105\nencoded1[i].length == 2\nencoded2[j].length == 2\n1 <= vali, freqi <= 104 for each encoded1[i].\n1 <= valj, freqj <= 104 for each encoded2[j].\nThe full arrays that encoded1 and encoded2 represent are the same length.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<vector<int>> findRLEArray(vector<vector<int>>& encoded1, vector<vector<int>>& encoded2) {\n4\n        \n5\n    }\n6\n};"}
