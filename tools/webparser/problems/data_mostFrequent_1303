{"title":"2247. Maximum Cost of Trip With K Highways","description":"A series of highways connect n cities numbered from 0 to n - 1. You are given a 2D integer array highways where highways[i] = [city1i, city2i, tolli] indicates that there is a highway that connects city1i and city2i, allowing a car to go from city1i to city2i and vice versa for a cost of tolli.\n\nYou are also given an integer k. You are going on a trip that crosses exactly k highways. You may start at any city, but you may only visit each city at most once during your trip.\n\nReturn the maximum cost of your trip. If there is no trip that meets the requirements, return -1.\n\n \n\nExample 1:\n\nInput: n = 5, highways = [[0,1,4],[2,1,3],[1,4,11],[3,2,3],[3,4,2]], k = 3\nOutput: 17\nExplanation:\nOne possible trip is to go from 0 -> 1 -> 4 -> 3. The cost of this trip is 4 + 11 + 2 = 17.\nAnother possible trip is to go from 4 -> 1 -> 2 -> 3. The cost of this trip is 11 + 3 + 3 = 17.\nIt can be proven that 17 is the maximum possible cost of any valid trip.\n\nNote that the trip 4 -> 1 -> 0 -> 1 is not allowed because you visit the city 1 twice.\n\n\nExample 2:\n\nInput: n = 4, highways = [[0,1,3],[2,3,2]], k = 2\nOutput: -1\nExplanation: There are no valid trips of length 2, so return -1.\n\n\n \n\nConstraints:\n\n2 <= n <= 15\n1 <= highways.length <= 50\nhighways[i].length == 3\n0 <= city1i, city2i <= n - 1\ncity1i != city2i\n0 <= tolli <= 100\n1 <= k <= 50\nThere are no duplicate highways.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int maximumCost(int n, vector<vector<int>>& highways, int k) {\n4\n        \n5\n    }\n6\n};"}
