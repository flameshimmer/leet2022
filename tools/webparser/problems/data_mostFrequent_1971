{"title":"1588. Sum of All Odd Length Subarrays","description":"Given an array of positive integers arr, return the sum of all possible odd-length subarrays of arr.\n\nA subarray is a contiguous subsequence of the array.\n\n \n\nExample 1:\n\nInput: arr = [1,4,2,5,3]\nOutput: 58\nExplanation: The odd-length subarrays of arr and their sums are:\n[1] = 1\n[4] = 4\n[2] = 2\n[5] = 5\n[3] = 3\n[1,4,2] = 7\n[4,2,5] = 11\n[2,5,3] = 10\n[1,4,2,5,3] = 15\nIf we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58\n\nExample 2:\n\nInput: arr = [1,2]\nOutput: 3\nExplanation: There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.\n\nExample 3:\n\nInput: arr = [10,11,12]\nOutput: 66\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 100\n1 <= arr[i] <= 1000\n\n \n\nFollow up:\n\nCould you solve this problem in O(n) time complexity?","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    int sumOddLengthSubarrays(vector<int>& arr) {\n4\n        \n5\n    }\n6\n};"}
