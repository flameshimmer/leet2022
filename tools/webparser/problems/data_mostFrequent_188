{"title":"942. DI String Match","description":"A permutation perm of n + 1 integers of all the integers in the range [0, n] can be represented as a string s of length n where:\n\ns[i] == 'I' if perm[i] < perm[i + 1], and\ns[i] == 'D' if perm[i] > perm[i + 1].\n\nGiven a string s, reconstruct the permutation perm and return it. If there are multiple valid permutations perm, return any of them.\n\n \n\nExample 1:\n\nInput: s = \"IDID\"\nOutput: [0,4,1,3,2]\n\n\nExample 2:\n\nInput: s = \"III\"\nOutput: [0,1,2,3]\n\n\nExample 3:\n\nInput: s = \"DDI\"\nOutput: [3,2,0,1]\n\n\n \n\nConstraints:\n\n1 <= s.length <= 105\ns[i] is either 'I' or 'D'.","functionSig":"1\nclass Solution {\n2\npublic:\n3\n    vector<int> diStringMatch(string s) {\n4\n        \n5\n    }\n6\n};"}
